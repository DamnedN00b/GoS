local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
local function Base64Decode(data)
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
        return r;
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
        return string.char(c)
    end))
end

assert(load(Base64Decode("local a=3.1;local b={"Kaisa","Galio","Teemo","Tristana","Jinx","Caitlyn","Kayn","Syndra","Tryndamere","Swain","Darius","Jhin","Sivir","Nasus","Malphite","MasterYi","Rengar","Pyke","Kalista","Aatrox","Corki","Leblanc","Evelynn","Rumble","Irelia","Lux","Ezreal","Twitch","Shaco"}local c=math.atan2;local d=math.pi;local e=math.max;local f=math.min;local g=math.abs;local h=math.sqrt;local i=string.find;local j=string.sub;local k=string.len;local l=math.huge;local m=table.insert;local n=Game.Latency;local o=Game.Timer;local p=myHero.charName;local q=false;local r=Game.HeroCount;local s=Game.Hero;local t=Game.MinionCount;local u=Game.Minion;local v=Game.TurretCount;local w=Game.Turret;local x=Game.WardCount;local y=Game.Ward;local z=Game.ObjectCount;local A=Game.Object;local B=Game.MissileCount;local C=Game.Missile;local D=Game.ParticleCount;local F=Game.Particle;local G=Game.CampCount;local H=Game.Camp;local I=ExtLibEvade and ExtLibEvade.Evading;local J={}local K={}if not table.contains(b,p)then print("LazyAiO - "..p.." is not supported, loading other modules...")else print("LazyAiO - "..p.." loading...")end;Callback.Add("Load",function()local function L(path,M)local N=io.open(path..M,"r")if not N then return false end;local O=N:read()N:close()return O end;local function P(S,path,M)DownloadFileAsync(S,path..M,function()end)if M=="LazyAiO.version"then print("Downloading LazyAiO version Info")elseif M=="LazyAiO.lua"then print("Downloading LazyAiO")end;while not FileExist(path..M)do end end;local function T()P("https://raw.githubusercontent.com/DamnedN00b/GoS/master/LazyAiO.version",COMMON_PATH,"LazyAiO.version")local U=tonumber(L(COMMON_PATH,"LazyAiO.version"))if U>a then P("https://raw.githubusercontent.com/DamnedN00b/GoS/master/LazyAiO.lua",SCRIPT_PATH,"LazyAiO.lua")print("LazyAiO: Updated to "..U..". Please Reload! -> 2x F6")return false else print("LazyAiO up-to-date! ["..a.."]")return true end end;if T()==false then return end;if FileExist(COMMON_PATH.."Collision.lua")then require'Collision'else print("Collision lib missing... Download and insert it in "..COMMON_PATH.." !")end;Menu=MenuElement({type=MENU,id=p,name="LazyAiO "..p})Menu:MenuElement({id="AiO",name="AiO Settings",type=MENU})Menu.AiO:MenuElement({id="Activator",name="Activator",type=MENU})Menu.AiO.Activator:MenuElement({id="Items",name="Items",type=MENU})Menu.AiO.Activator.Items:MenuElement({id="tiamat",name="Tiamat",type=MENU})Menu.AiO.Activator.Items.tiamat:MenuElement({id="useTiamat",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items:MenuElement({id="ravenousHydra",name="Ravenous Hydra",type=MENU})Menu.AiO.Activator.Items.ravenousHydra:MenuElement({id="useRavenousHydra",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items:MenuElement({id="titanicHydra",name="Titanic Hydra",type=MENU})Menu.AiO.Activator.Items.titanicHydra:MenuElement({id="useTitanicHydra",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items:MenuElement({id="bilgewaterCutlass",name="Bilgewater Cutlass",type=MENU})Menu.AiO.Activator.Items.bilgewaterCutlass:MenuElement({id="useBilgewaterCutlass",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items.bilgewaterCutlass:MenuElement({id="bilgewaterCutlassTHP",name="Enemy HP %",value=40,min=0,max=100,step=1,tooltip="if Target HP% < x"})Menu.AiO.Activator.Items.bilgewaterCutlass:MenuElement({id="bilgewaterCutlassHP",name="my Hero HP %",value=40,min=0,max=100,step=1,tooltip="My HP% < x"})Menu.AiO.Activator.Items:MenuElement({id="botrk",name="BotRK",type=MENU})Menu.AiO.Activator.Items.botrk:MenuElement({id="useBotrk",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items.botrk:MenuElement({id="botrkTHP",name="Enemy HP %",value=40,min=0,max=100,step=1,tooltip="if Target HP% < x"})Menu.AiO.Activator.Items.botrk:MenuElement({id="botrkHP",name="my Hero HP %",value=40,min=0,max=100,step=1,tooltip="My HP% < x"})Menu.AiO.Activator.Items:MenuElement({id="edgeOfNight",name="Edge Of Night",type=MENU})Menu.AiO.Activator.Items.edgeOfNight:MenuElement({id="useEdgeOfNight",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items.edgeOfNight:MenuElement({id="edgeOfNightRange",name="Range",value=800,min=0,max=2000,step=100,tooltip="Target in x Range"})Menu.AiO.Activator.Items:MenuElement({id="hextechGLP",name="Hextech GLP-800",type=MENU})Menu.AiO.Activator.Items.hextechGLP:MenuElement({id="useHextechGLP",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items.hextechGLP:MenuElement({id="hextechGLPTHP",name="Enemy HP %",value=40,min=0,max=100,step=1,tooltip="if Target HP% < x"})Menu.AiO.Activator.Items.hextechGLP:MenuElement({id="hextechGLPHP",name="my Hero HP %",value=40,min=0,max=100,step=1,tooltip="My HP% < x"})Menu.AiO.Activator.Items:MenuElement({id="hextechGunblade",name="Hextech Gunblade",type=MENU})Menu.AiO.Activator.Items.hextechGunblade:MenuElement({id="useHextechGunblade",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items.hextechGunblade:MenuElement({id="hextechGunbladeTHP",name="Enemy HP %",value=40,min=0,max=100,step=1,tooltip="if Target HP% < x"})Menu.AiO.Activator.Items.hextechGunblade:MenuElement({id="hextechGunbladeHP",name="my Hero HP %",value=40,min=0,max=100,step=1,tooltip="My HP% < x"})Menu.AiO.Activator.Items:MenuElement({id="hextechProtobelt",name="Hextech Protobelt",type=MENU})Menu.AiO.Activator.Items.hextechProtobelt:MenuElement({id="useHextechProtobelt",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items.hextechProtobelt:MenuElement({id="hextechProtobeltTHP",name="Enemy HP %",value=40,min=0,max=100,step=1,tooltip="if Target HP% < x"})Menu.AiO.Activator.Items.hextechProtobelt:MenuElement({id="hextechProtobeltHP",name="my Hero HP %",value=40,min=0,max=100,step=1,tooltip="My HP% > x"})Menu.AiO.Activator.Items:MenuElement({id="redemption",name="Redemption",type=MENU})Menu.AiO.Activator.Items.redemption:MenuElement({id="useRedemption",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items.redemption:MenuElement({id="redemptionHP",name="Ally HP %",value=15,min=0,max=100,step=1,tooltip="Ally HP% < x"})Menu.AiO.Activator.Items:MenuElement({id="zhonyasHourglass",name="Zhonyas Hourglass",type=MENU})Menu.AiO.Activator.Items.zhonyasHourglass:MenuElement({id="useZhonyasHourglass",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items.zhonyasHourglass:MenuElement({id="zhonyasHourglassHP",name="my Hero HP %",value=10,min=0,max=100,step=1,tooltip="My HP% < x"})Menu.AiO.Activator.Items.zhonyasHourglass:MenuElement({id="zhonyasHourglassRange",name="Range",value=500,min=0,max=1000,step=10,tooltip="Enemy in x Range"})Menu.AiO.Activator.Items:MenuElement({id="qss",name="Quicksilver Sash",type=MENU})Menu.AiO.Activator.Items.qss:MenuElement({id="useQss",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items:MenuElement({id="mercurialScimitar",name="Mercurial Scimitar",type=MENU})Menu.AiO.Activator.Items.mercurialScimitar:MenuElement({id="useMercurialScimitar",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator.Items:MenuElement({id="mikaelsCrucible",name="Mikaels Crucible",type=MENU})Menu.AiO.Activator.Items.mikaelsCrucible:MenuElement({id="useMikaelsCrucible",name="Use",value=true,tooltip="general ON/OFF switch"})Menu.AiO.Activator:MenuElement({id="Summoners",name="Summoners",type=MENU})Menu.AiO.Activator.Summoners:MenuElement({id="useSmite",name="Cast red/blue smite in Combo",value=true})Menu.AiO:MenuElement({id="Draw",name="Draw Settings",type=MENU})Menu.AiO.Draw:MenuElement({id="DrawQ",name="Draw Q Range",value=false})Menu.AiO.Draw:MenuElement({id="DrawW",name="Draw W Range",value=false})Menu.AiO.Draw:MenuElement({id="DrawE",name="Draw E Range",value=false})Menu.AiO.Draw:MenuElement({id="DrawR",name="Draw R Range",value=false})Menu.AiO:MenuElement({id="Pred",name="Prediction Settings",type=MENU})Menu.AiO.Pred:MenuElement({id="pred",name="Pred to use",drop={"Noddy's","HPred"},value=1})Menu.AiO.Pred:MenuElement({id="HPred",name="HPred Settings",type=MENU})Menu.AiO.Pred.HPred:MenuElement({id="reactionTime",name="Reaction Time",value=.5,min=.1,max=1,step=.1})Menu.AiO.Pred.HPred:MenuElement({id="accuracy",name="HitChance",value=3,min=1,max=5,step=1})Menu.AiO.Pred:MenuElement({id="NPred",name="Noddy's Pred Settings",type=MENU})Menu.AiO.Pred.NPred:MenuElement({id="soonTM",name="Nothing here :P",value=false})HPred()AioLoad()end)function AioLoad()if not q then LoadAio()return end end;function LoadAio()q=true;if table.contains(b,p)then _G[p]()end;Callback.Add("Tick",function()Utils:OnTick()end)if _G.SDK then _G.SDK.Orbwalker:OnPostAttack(function()Utils:OnPostAttack()end)elseif _G.EOW then EOW:AddCallback(EOW.AfterAttack,function()Utils:OnPostAttack()end)elseif _G.GOS then GOS:OnAttackComplete(function()Utils:OnPostAttack()end)end;Callback.Add("Tick",function()HPred:Tick()end)Callback.Add("Draw",function()AioDraw()end)LoadSummonersAiO()end;function LoadSummonersAiO()Utils.Smite=Utils:GetSmite(SUMMONER_1)or 0;if Utils.Smite==0 then Utils.Smite=Utils:GetSmite(SUMMONER_2)end;Utils.lastSmite=GetTickCount()Utils.Ignite=Utils:GetIgnite(SUMMONER_1)or 0;if Utils.Ignite==0 then Utils.Ignite=Utils:GetIgnite(SUMMONER_2)end;Utils.Ignite=GetTickCount()end;function AioDraw()if Q and Q.range and Menu.AiO.Draw.DrawQ:Value()then if Utils:IsReady(_Q)then Draw.Circle(myHero.pos,Q.range,1,Draw.Color(255,0,255,0))else Draw.Circle(myHero.pos,Q.range,1,Draw.Color(255,255,0,0))end end;if W and W.range and Menu.AiO.Draw.DrawW:Value()then if Utils:IsReady(_W)then Draw.Circle(myHero.pos,W.range,1,Draw.Color(255,0,255,0))else Draw.Circle(myHero.pos,W.range,1,Draw.Color(255,255,0,0))end end;if E and E.range and Menu.AiO.Draw.DrawE:Value()then if Utils:IsReady(_E)then Draw.Circle(myHero.pos,E.range,1,Draw.Color(255,0,255,0))else Draw.Circle(myHero.pos,E.range,1,Draw.Color(255,255,0,0))end end;if R and R.range and Menu.AiO.Draw.DrawR:Value()then if Utils:IsReady(_R)then Draw.Circle(myHero.pos,R.range,1,Draw.Color(255,0,255,0))else Draw.Circle(myHero.pos,R.range,1,Draw.Color(255,255,0,0))end end end;class"Utils"function Utils:IsReady(V)return Game.CanUseSpell(V)==0 end;function Utils:IsValid(X,Y,Z)return self:GetDistance(X.pos,Y)<=Z and X.health>0 and X.isTargetable and X.visible end;function Utils:GetDistanceSqr(_,a0)local a1=_.x-a0.x;local a2=_.z-a0.z;return a1*a1+a2*a2 end;function Utils:GetDistance(_,a0)return h(self:GetDistanceSqr(_,a0))end;function Utils:GetDistance2D(_,a0)return h((a0.x-_.x)*(a0.x-_.x)+(a0.y-_.y)*(a0.y-_.y))end;function Utils:GetHpPercent(X)return X.health/X.maxHealth*100 end;function Utils:GetManaPercent(X)return X.mana/X.maxMana*100 end;function Utils:GetTarget(Z)if _G.EOWLoaded then if myHero.ap>myHero.totalDamage then return EOW:GetTarget(Z,EOW.ap_dec,myHero.pos)else return EOW:GetTarget(Z,EOW.ad_dec,myHero.pos)end elseif _G.SDK and _G.SDK.TargetSelector then if myHero.ap>myHero.totalDamage then return _G.SDK.TargetSelector:GetTarget(Z,_G.SDK.DAMAGE_TYPE_MAGICAL)else return _G.SDK.TargetSelector:GetTarget(Z,_G.SDK.DAMAGE_TYPE_PHYSICAL)end elseif _G.GOS then if myHero.ap>myHero.totalDamage then return GOS:GetTarget(Z,"AP")else return GOS:GetTarget(Z,"AD")end end end;function Utils:HasBuff(X,a3)for a4=1,X.buffCount do local a5=X:GetBuff(a4)if a5 and a5.count>0 and a5.name:lower()==a3:lower()then return true end end;return false end;function Utils:IsParticleInRange(a6,Y,Z)for a4=1,D()do local a7=F(a4)if a7 and not a7.dead then if a7.name:lower()==a6:lower()then if self:GetDistance(a7.pos,Y)<=Z then return true end end end end;return false end;function Utils:GetAllyHeroes()local a8={}if#a8>0 then return a8 end;for a4=1,r()do local X=s(a4)if X and X.isAlly then m(a8,X)end end;return a8 end;function Utils:GetEnemyHeroes()local a9={}if#a9>0 then return a9 end;for a4=1,r()do local X=s(a4)if X and X.isEnemy then m(a9,X)end end;return a9 end;function Utils:GetEnemyHeroesInRange(Y,Z)local a9={}for a4=1,r()do local X=s(a4)if X and X.isEnemy and self:IsValid(X,Y,Z)then m(a9,X)end end;return a9 end;function Utils:GetAllyHeroesInRange(Y,Z)local a8={}for a4=1,r()do local X=s(a4)if X and X.isAlly and self:IsValid(X,Y,Z)then m(a8,X)end end;return a8 end;function Utils:GetEnemyMinionsInRange(Y,Z)local aa={}for a4=1,t()do local X=u(a4)if X and X.isEnemy and self:IsValid(X,Y,Z)then m(aa,X)end end;return aa end;function Utils:GetAllyMinionsInRange(Y,Z)local ab={}for a4=1,t()do local X=u(a4)if X and X.isAlly and self:IsValid(X,Y,Z)then m(ab,X)end end;return ab end;function Utils:IsUnderEnemyTurret(Y)for a4=1,v()do local ac=w(a4)if ac then if ac.valid and ac.health>0 and ac.isEnemy then local ad=ac.pos;if Utils:GetDistance(Y,ad)<=900 then return true end end end end;return false end;function Utils:IsUnderAllyTurret(Y)for a4=1,v()do local ac=w(a4)if ac then if ac.valid and ac.health>0 and ac.isAlly then local ad=ac.pos;if Utils:GetDistance(Y,ad)<=900 then return true end end end end;return false end;local ae={state=0,tick=GetTickCount(),casting=GetTickCount()-1000,mouse=mousePos}function Utils:CastSpell(V,Y,Z,delay)local Z=Z or l;local delay=delay or 250;local af=GetTickCount()if ae.state==0 and self:GetDistance(myHero.pos,Y)<Z and af-ae.casting>delay+n()then ae.state=1;ae.mouse=mousePos;ae.tick=af end;if ae.state==1 then if af-ae.tick<n()then Control.SetCursorPos(Y)Control.KeyDown(V)Control.KeyUp(V)ae.casting=af+delay;DelayAction(function()if ae.state==1 then Control.SetCursorPos(ae.mouse)ae.state=0 end end,n()/1000)end;if af-ae.casting>n()then Control.SetCursorPos(ae.mouse)ae.state=0 end end end;function Utils:CastSpellMM(V,Y,Z,delay)local Z=Z or l;local delay=delay or 250;local af=GetTickCount()if ae.state==0 and self:GetDistance(myHero.pos,Y)<Z and af-ae.casting>delay+n()then ae.state=1;ae.mouse=mousePos;ae.tick=af end;if ae.state==1 then if af-ae.tick<n()then local ag=Y:ToMM()Control.SetCursorPos(ag.x,ag.y)Control.KeyDown(V)Control.KeyUp(V)ae.casting=af+delay;DelayAction(function()if ae.state==1 then Control.SetCursorPos(ae.mouse)ae.state=0 end end,n()/1000)end;if af-ae.casting>n()then Control.SetCursorPos(ae.mouse)ae.state=0 end end end;function Utils:CastSpellCharged(V,Y,Z,delay)local Z=Z or l;local delay=delay or 250;local af=GetTickCount()if ae.state==0 and self:GetDistance(myHero.pos,Y)<Z and af-ae.casting>delay+n()then ae.state=1;ae.mouse=mousePos;ae.tick=af end;if ae.state==1 then if af-ae.tick<n()then Control.SetCursorPos(Y)Control.KeyUp(V)ae.casting=af+delay;DelayAction(function()if ae.state==1 then Control.SetCursorPos(ae.mouse)ae.state=0 end end,n()/1000)end;if af-ae.casting>n()then Control.SetCursorPos(ae.mouse)ae.state=0 end end end;local ah={'SummonerSmite','S5_SummonerSmiteDuel','S5_SummonerSmitePlayerGanker','S5_SummonerSmiteQuick','ItemSmiteAoE'}local ai={390,410,430,450,480,510,540,570,600,640,680,720,760,800,850,900,950,1000}function Utils:GetSmite(smiteSlot)local aj=0;local ak=myHero:GetSpellData(smiteSlot).name;for a4=1,5 do if ak==ah[a4]then aj=smiteSlot end end;return aj end;function Utils:GetIgnite(al)local am=0;local ak=myHero:GetSpellData(al).name;if ak:lower()=="summonerignite"then am=smiteSlot end;return am end;function Utils:CastSmite()local an=myHero:GetSpellData(Utils.Smite)if an.name==ah[3]or an.name==ah[2]then if an.level>0 then if an.ammo>0 and an.ammoCurrentCd==0 then for a4=1,r()do local ao=s(a4)if ao and ao.isEnemy and self:IsValid(ao,myHero.pos,500+myHero.boundingRadius+ao.boundingRadius)then if Utils.Smite==SUMMONER_1 then Control.CastSpell(HK_SUMMONER_1,ao)self.lastSmite=GetTickCount()else Control.CastSpell(HK_SUMMONER_2,ao)self.lastSmite=GetTickCount()end end end end end end end;function Utils:CalculatePhysicalDamage(target,ap)if target and ap then local aq=target.armor*myHero.armorPenPercent-myHero.armorPen;local ar=100/(100+aq)if aq<0 then ar=2-100/(100-aq)end;ap=ap*ar;return ap end;return 0 end;function Utils:CalculateMagicalDamage(target,ap)if target and ap then local as=target.magicResist*myHero.magicPenPercent-myHero.magicPen;local ar=100/(100+as)if as<0 then ar=2-100/(100-as)end;ap=ap*ar;return ap end;return 0 end;function Utils:IsImmobile(X)for a4=1,X.buffCount do local a5=X:GetBuff(a4)if a5 and(a5.type==5 or a5.type==11 or a5.type==22 or a5.type==29)and a5.count>0 then return true end end;return false end;function Utils:OnVision(X)local at={}if at[X.networkID]==nil then at[X.networkID]={state=X.visible,tick=GetTickCount(),pos=X.pos}end;if at[X.networkID].state==true and not X.visible then at[X.networkID].state=false;at[X.networkID].tick=GetTickCount()end;if at[X.networkID].state==false and X.visible then at[X.networkID].state=true;at[X.networkID].tick=GetTickCount()end;return at[X.networkID]end;function Utils:OnVisionF()local au=GetTickCount()if GetTickCount()-au>100 then for av,aw in pairs(self:GetEnemyHeroes())do if aw then self:OnVision(aw)end end end end;function Utils:OnWaypoint(X)local ax={}if ax[X.networkID]==nil then ax[X.networkID]={pos=X.posTo,speed=X.ms,time=o()}end;if ax[X.networkID].pos~=X.posTo then ax[X.networkID]={startPos=X.pos,pos=X.posTo,speed=X.ms,time=o()}DelayAction(function()local ay=o()-ax[X.networkID].time;local az=self:GetDistance2D(ax[X.networkID].startPos,X.pos)/(o()-ax[X.networkID].time)if az>1250 and ay>0 and X.posTo==ax[X.networkID].pos and self:GetDistance(X.pos,ax[X.networkID].pos)>200 then ax[X.networkID].speed=self:GetDistance2D(ax[X.networkID].startPos,X.pos)/(o()-ax[X.networkID].time)end end,0.05)end;return ax[X.networkID]end;function Utils:GetPred(X,az,delay,aA)local az=az or l;local delay=delay or 0.25;local aA=aA or myHero.pos;local aB=X.ms;if self:OnWaypoint(X).speed>aB then aB=self:OnWaypoint(X).speed end;if aB>X.ms then local aC=X.pos+Vector(self:OnWaypoint(X).startPos,X.posTo):Normalized()*aB*(delay+self:GetDistance(aA,X.pos)/az)if self:GetDistance(X.pos,aC)>self:GetDistance(X.pos,X.posTo)then aC=X.posTo end;return aC elseif self:IsImmobile(X)then return X.pos else return X:GetPrediction(az,delay)end end;local aD={[ITEM_1]=HK_ITEM_1,[ITEM_2]=HK_ITEM_2,[ITEM_3]=HK_ITEM_3,[ITEM_4]=HK_ITEM_4,[ITEM_5]=HK_ITEM_5,[ITEM_6]=HK_ITEM_6}function Utils:GetInventoryItem(aE)for av,aw in pairs({ITEM_1,ITEM_2,ITEM_3,ITEM_4,ITEM_5,ITEM_6})do if aw then if myHero:GetItemData(aw).itemID==aE and myHero:GetSpellData(aw).currentCd==0 then return aw end end end;return nil end;function Utils:OnPostAttack()local aF=self:GetInventoryItem(3748)local aG=self:GetInventoryItem(3074)local aH=self:GetInventoryItem(3077)if Orb.combo or Orb.harass then for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,550)do local target=Utils:GetEnemyHeroesInRange(myHero.pos,550)[a4]if target then local Z=myHero.range+myHero.boundingRadius;if aG and Menu.AiO.Activator.Items.ravenousHydra.useRavenousHydra:Value()and self:IsValid(target,myHero.pos,550)then Control.CastSpell(aD[aG])end;if aH and Menu.AiO.Activator.Items.tiamat.useTiamat:Value()and self:IsValid(target,myHero.pos,550)then Control.CastSpell(aD[aH])end;if aF and Menu.AiO.Activator.Items.titanicHydra.useTitanicHydra:Value()and self:IsValid(target,myHero.pos,Z)then Control.CastSpell(aD[aF])end end end end end;function Utils:CastItems()local target=nil;local aI=nil;local aJ=myHero.attackData.target;local aK=self:GetInventoryItem(3107)local aL=self:GetInventoryItem(3144)local aM=self:GetInventoryItem(3153)local aN=self:GetInventoryItem(3814)local aO=self:GetInventoryItem(3030)local aP=self:GetInventoryItem(3146)local aQ=self:GetInventoryItem(3152)local aR=self:GetInventoryItem(3139)local aS=self:GetInventoryItem(3222)local aT=self:GetInventoryItem(3157)local aU=self:GetInventoryItem(3140)for aV,aw in pairs(self:GetEnemyHeroesInRange(myHero.pos,5500))do local aW=aw;if aW and self:IsValid(aW,myHero.pos,5500)then target=aW end end;for aV,aw in pairs(self:GetAllyHeroesInRange(myHero.pos,5500))do local aW=aw;if aW and self:IsValid(aW,myHero.pos,5500)then aI=aW end end;if aK and Menu.AiO.Activator.Items.redemption.useRedemption:Value()then if aI and self:GetHpPercent(aI)<=Menu.AiO.Activator.Items.redemption.redemptionHP:Value()then if aI.pos:To2D().onScreen then self:CastSpell(aD[aK],aI.pos,5500)else self:CastSpellMM(aD[aK],aI.pos,5500)end end end;if myHero.alive then if aU and Menu.AiO.Activator.Items.qss.useQss:Value()and self:IsImmobile(myHero)and#Utils:GetEnemyHeroesInRange(myHero.pos,2000)>0 then Control.CastSpell(aD[aU])end;if aR and Menu.AiO.Activator.Items.mercurialScimitar.useMercurialScimitar:Value()and self:IsImmobile(myHero)and#Utils:GetEnemyHeroesInRange(myHero.pos,2000)>0 then Control.CastSpell(aD[aR])end;if aS and aI and aI.networkID~=myHero.networkID and Menu.AiO.Activator.Items.mikaelsCrucible.useMikaelsCrucible:Value()and self:IsImmobile(aI)and#Utils:GetEnemyHeroesInRange(aI.pos,2000)>0 and self:GetDistance(myHero.pos,aI.pos)<=750 then self:CastSpell(aD[aS],aI.pos,750)end end;if target and myHero.alive then if aL and Menu.AiO.Activator.Items.bilgewaterCutlass.useBilgewaterCutlass:Value()and self:IsValid(target,myHero.pos,550)then if self:GetHpPercent(target)<=Menu.AiO.Activator.Items.bilgewaterCutlass.bilgewaterCutlassTHP:Value()or self:GetHpPercent(myHero)<=Menu.AiO.Activator.Items.bilgewaterCutlass.bilgewaterCutlassHP:Value()then self:CastSpell(aD[aL],target.pos,550)end end;if aM and Menu.AiO.Activator.Items.botrk.useBotrk:Value()and self:IsValid(target,myHero.pos,550)then if self:GetHpPercent(target)<=Menu.AiO.Activator.Items.botrk.botrkTHP:Value()or self:GetHpPercent(myHero)<=Menu.AiO.Activator.Items.botrk.botrkHP:Value()then self:CastSpell(aD[aM],target.pos,550)end end;if aN and Menu.AiO.Activator.Items.edgeOfNight.useEdgeOfNight:Value()and self:IsValid(target,myHero.pos,Menu.AiO.Activator.Items.edgeOfNight.edgeOfNightRange:Value())then Control.CastSpell(aD[aN])end;if aO and Menu.AiO.Activator.Items.hextechGLP.useHextechGLP:Value()and self:IsValid(target,myHero.pos,550)then if self:GetHpPercent(target)<=Menu.AiO.Activator.Items.hextechGLP.hextechGLPTHP:Value()or self:GetHpPercent(myHero)<=Menu.AiO.Activator.Items.hextechGLP.hextechGLPHP:Value()then self:CastSpell(aD[aO],target.pos,550)end end;if aP and Menu.AiO.Activator.Items.hextechGunblade.useHextechGunblade:Value()and self:IsValid(target,myHero.pos,700)then if self:GetHpPercent(target)<=Menu.AiO.Activator.Items.hextechGunblade.hextechGunbladeTHP:Value()or self:GetHpPercent(myHero)<=Menu.AiO.Activator.Items.hextechGunblade.hextechGunbladeHP:Value()then self:CastSpell(aD[aP],target.pos,700)end end;if aQ and Menu.AiO.Activator.Items.hextechProtobelt.useHextechProtobelt:Value()and self:IsValid(target,myHero.pos,550)then if self:GetHpPercent(target)<=Menu.AiO.Activator.Items.hextechProtobelt.hextechProtobeltTHP:Value()and self:GetHpPercent(myHero)>=Menu.AiO.Activator.Items.hextechProtobelt.hextechProtobeltHP:Value()then self:CastSpell(aD[aQ],target.pos,550)end end;if zhonyas and Menu.AiO.Activator.Items.zhonyas.useZhonyas:Value()and self:GetDistance(myHero.pos,target.pos)<=Menu.AiO.Activator.Items.zhonyas.zhonyasRange:Value()then if self:GetHpPercent(myHero)<=Menu.AiO.Activator.Items.zhonyas.zhonyasHP:Value()then Control.CastSpell(aD[aT])end end end end;function Utils:OnTick()Orb:GetOrbMode()self:OnVisionF()self:CastItems()if Orb.combo then if Menu.AiO.Activator.Summoners.useSmite:Value()and Orb.combo then Utils:CastSmite()end end end;class"Orb"function Orb:DisableMovement(aX)if _G.SDK then _G.SDK.Orbwalker:SetMovement(not aX)elseif _G.EOWLoaded then EOW:SetMovements(not aX)elseif _G.GOS then GOS.BlockMovement=aX end end;function Orb:DisableAttacks(aX)if _G.SDK then _G.SDK.Orbwalker:SetAttack(not aX)elseif _G.EOWLoaded then EOW:SetAttacks(not aX)elseif _G.GOS then GOS.BlockAttack=aX end end;function Orb:GetOrbMode()self.combo,self.harass,self.lastHit,self.laneClear,self.jungleClear,self.canMove,self.canAttack=nil,nil,nil,nil,nil,nil,nil;if _G.EOWLoaded then local aY=EOW:Mode()self.combo=aY==1;self.harass=aY==2;self.lastHit=aY==3;self.laneClear=aY==4;self.jungleClear=aY==4;self.canmove=EOW:CanMove()self.canattack=EOW:CanAttack()elseif _G.SDK then self.combo=_G.SDK.Orbwalker.Modes[_G.SDK.ORBWALKER_MODE_COMBO]self.harass=_G.SDK.Orbwalker.Modes[_G.SDK.ORBWALKER_MODE_HARASS]self.lastHit=_G.SDK.Orbwalker.Modes[_G.SDK.ORBWALKER_MODE_LASTHIT]self.laneClear=_G.SDK.Orbwalker.Modes[_G.SDK.ORBWALKER_MODE_LANECLEAR]self.jungleClear=_G.SDK.Orbwalker.Modes[_G.SDK.ORBWALKER_MODE_JUNGLECLEAR]self.canmove=_G.SDK.Orbwalker:CanMove(myHero)self.canattack=_G.SDK.Orbwalker:CanAttack(myHero)elseif _G.GOS then local aY=GOS:GetMode()self.combo=aY=="Combo"self.harass=aY=="Harass"self.lastHit=aY=="Lasthit"self.laneClear=aY=="Clear"self.jungleClear=aY=="Clear"self.canMove=GOS:CanMove()self.canAttack=GOS:CanAttack()end end;class"Kaisa"function Kaisa:__init()if p~="Kaisa"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)Callback.Add("Draw",function()self:OnDraw()end)end;function Kaisa:LoadSpells()Q={range=650}W={range=3000,width=myHero:GetSpellData(_W).width,speed=myHero:GetSpellData(_W).speed,delay=0.25,collision=Collision:SetSpell(3000,myHero:GetSpellData(_W).speed,0.25,myHero:GetSpellData(_W).width,true)}E={range=myHero:GetSpellData(_E).range}R={range=myHero:GetSpellData(_R).range}end;function Kaisa:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Misc",name="Misc Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="rSettings",name="R settings",type=MENU})Menu.Combo.rSettings:MenuElement({id="useR",name="Use R",value=true})Menu.Combo.rSettings:MenuElement({id="def",name="Defensive usage",type=MENU})Menu.Combo.rSettings.def:MenuElement({id="useRdefensive",name="Use R defensive",value=true})Menu.Combo.rSettings.def:MenuElement({id="useRdefensiveHp",name="HP% for defensive usage",value=20,min=0,max=100,step=1})Menu.Combo.rSettings.def:MenuElement({id="useRdefensiveRange",name="if enemy in X range",value=600,min=0,max=3000,step=50})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Misc:MenuElement({id="drawLine",name="Draw line if can use R",value=true})Menu.Misc:MenuElement({id="lineWidth",name="Line width",value=2,min=1,max=10,step=1})end;function Kaisa:OnTick()local aZ=Utils:HasBuff(myHero,"kaisae")self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)if aZ then Orb:DisableAttacks(true)else Orb:DisableAttacks(false)end;if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Kaisa:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)then Control.CastSpell(HK_Q)end end;function Kaisa:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)then if myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then local b6,b7=W.collision:__GetCollision(myHero.pos,b4,5)if not b6 then if Utils:GetDistance(b4,myHero.pos)<W.range then if b4:To2D().onScreen then Utils:CastSpell(HK_W,b4,W.range)else Utils:CastSpellMM(HK_W,b4,W.range)end end end end else if a_ and b0 and a_.networkID==X.networkID then local b6,b7=W.collision:__GetCollision(myHero.pos,b0,5)if not b6 then if Utils:GetDistance(b0,myHero.pos)<W.range then if b0:To2D().onScreen then Utils:CastSpell(HK_W,b0,W.range)else Utils:CastSpellMM(HK_W,b0,W.range)end end end end;if b1 and b2 then local b6,b7=W.collision:__GetCollision(myHero.pos,b2,5)if not b6 then if b1>=b5 or b1>=1 and self:GetWdmg(X)>X.health then if Utils:GetDistance(b2,myHero.pos)<W.range then if b2:To2D().onScreen then Utils:CastSpell(HK_W,b2,W.range)else Utils:CastSpellMM(HK_W,b2,W.range)end end end end end end end end end;function Kaisa:CastDefensiveR()for aV,aw in pairs(Utils:GetEnemyHeroesInRange(myHero.pos,R.range))do local b8=Utils:GetEnemyHeroesInRange(myHero.pos,R.range)[aV]if b8 then if Utils:HasBuff(b8,"kaisapassivemarkerr")then Utils:CastSpell(HK_R,b8.pos:Extended(myHero.pos,500),R.range)end end end end;function Kaisa:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local bb=Utils:IsReady(_R)and Menu.Combo.rSettings.useR:Value()and Menu.Combo.rSettings.def.useRdefensive:Value()and Utils:GetHpPercent(myHero)<=Menu.Combo.rSettings.def.useRdefensiveHp:Value()and#Utils:GetEnemyHeroesInRange(myHero.pos,Menu.Combo.rSettings.def.useRdefensiveRange:Value())>0;if not self.wTarget then return end;if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if bb then self:CastDefensiveR()end end;function Kaisa:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)if not self.wTarget then return end;if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end end;function Kaisa:OnDraw()local bc=myHero.pos:To2D()for aV,aw in pairs(Utils:GetEnemyHeroesInRange(myHero.pos,R.range))do local b8=aw;if b8 then if Utils:HasBuff(b8,"kaisapassivemarkerr")then local bd=b8.pos:To2D()if Menu.Misc.drawLine:Value()then local be=Menu.Misc.lineWidth:Value()Draw.Line(bc.x,bc.y,bd.x,bd.y,be,Draw.Color(255,155,105,240))end end end end end;function Kaisa:GetWdmg(X)local bf=0;if X then local bg=myHero:GetSpellData(_W).level;if bg>0 then local bh=({20,45,70,95,120})[bg]local bi=myHero.totalDamage*1.5;local bj=myHero.ap*.45;bf=bh+Utils:CalculateMagicalDamage(X,bh+bi+bj)end end;return bf end;class"Galio"function Galio:__init()if p~="Galio"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)Callback.Add("Draw",function()self:OnDraw()end)end;function Galio:LoadSpells()Q={range=825,width=myHero:GetSpellData(_Q).width,speed=myHero:GetSpellData(_Q).speed,delay=0.25}W={range=350}E={range=650,width=160,speed=1400,delay=0.45,collision=Collision:SetSpell(650,1400,0.45,160,true)}R={range=4000}end;function Galio:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Misc",name="Misc Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})Menu.Misc:MenuElement({id="drawLine",name="Draw line to low Allies",value=true})Menu.Misc:MenuElement({id="drawHP",name="HP % to draw line",value=50,min=1,max=100,step=1})end;function Galio:OnTick()if#Utils:GetEnemyHeroesInRange(myHero.pos,250)>0 then if Utils:HasBuff(myHero,"galiow")then Orb:DisableMovement(true)else Orb:DisableMovement(false)end else Orb:DisableMovement(false)end;local bk=myHero:GetSpellData(_R).level;R.range=({4000,4750,5500})[bk]self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Galio:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)then local a_,b0=HPred:GetReliableTarget(myHero.pos,Q.range,Q.delay,Q.speed,Q.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,Q.range,Q.delay,Q.speed,Q.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,Q.speed,Q.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if Utils:GetDistance(myHero.pos,b4)<Q.range then if b4:To2D().onScreen then Utils:CastSpell(HK_Q,b4,Q.range)end end end else if a_ and b0 then if Utils:GetDistance(myHero.pos,b0)<Q.range then if b0:To2D().onScreen then Utils:CastSpell(HK_Q,b0,Q.range)end end end;if b1 and b2 and b1>=b5 then if Utils:GetDistance(myHero.pos,b2)<Q.range then if b2:To2D().onScreen then Utils:CastSpell(HK_Q,b2,Q.range)end end end end end end;function Galio:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)then local bl=Utils:GetPred(X,l,0.4)if bl then if bl:To2D().onScreen then if Utils:GetDistance(bl,myHero.pos)<W.range then Control.KeyDown(HK_W)else if Utils:GetDistance(bl,myHero.pos)>W.range or Utils:GetDistance(X.pos,myHero.pos)>W.range then Control.KeyUp(HK_W)end end end end else if Control.IsKeyDown(HK_W)then Control.KeyUp(HK_W)end end end;function Galio:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)then local a_,b0=HPred:GetReliableTarget(myHero.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,E.range,E.delay,E.speed,E.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if Utils:GetDistance(b4,myHero.pos)<E.range and b4:To2D().onScreen then Utils:CastSpell(HK_E,myHero.pos:Extended(b4,E.range),E.range)end end else if a_ and b0 then if Utils:GetDistance(b0,myHero.pos)<E.range and b0:To2D().onScreen then Utils:CastSpell(HK_E,myHero.pos:Extended(b0,E.range),E.range)end end;if b1 and b2 and b1>=b5 then if Utils:GetDistance(b2,myHero.pos)<E.range and b2:To2D().onScreen then Utils:CastSpell(HK_E,myHero.pos:Extended(b2,E.range),E.range)end end end end end;function Galio:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Galio:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Galio:OnDraw()local bc=myHero.pos:To2D()if Utils:IsReady(_R)then if#Utils:GetAllyHeroesInRange(myHero.pos,R.range)>0 then for av,aw in pairs(Utils:GetAllyHeroesInRange(myHero.pos,R.range))do local b8=Utils:GetAllyHeroesInRange(myHero.pos,R.range)[av]if b8 then if b8~=myHero then if Utils:GetHpPercent(b8)<Menu.Misc.drawHP:Value()then local bm=b8.pos:To2D()if Menu.Misc.drawLine:Value()then Draw.Line(bc.x,bc.y,bm.x,bm.y,1,Draw.Color(255,255,0,0))end end end end end end end end;class"Teemo"function Teemo:__init()if p~="Teemo"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)end;function Teemo:LoadSpells()Q={range=680,delay=0.25}W={range=500}E={}R={}end;function Teemo:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})end;function Teemo:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Teemo:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)then if myHero.attackData.state~=STATE_WINDUP then Utils:CastSpell(HK_Q,X.pos,Q.range)end end end;function Teemo:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)then Control.CastSpell(HK_W)end end;function Teemo:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end end;function Teemo:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end end;class"Tristana"function Tristana:__init()if p~="Tristana"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)end;function Tristana:LoadSpells()Q={range=525}W={range=900}E={range=525}R={range=525,knockbackRange=600}end;function Tristana:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Misc",name="Misc Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R finisher",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})Menu.Misc:MenuElement({id="drawInsec",name="Draw flashy Insec lines",value=true})end;function Tristana:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.eTarget=Utils:GetTarget(E.range)self.rTarget=Utils:GetTarget(R.range)self:UpdateRange()if not I then if Orb.combo then self:ForceTarget()self:Combo()self:ReleaseTarget()elseif Orb.harass then self:Harass()elseif Orb.laneClear or Orb.jungleClear then self:ForceMinion()self:ReleaseMinions()end end end;function Tristana:ForceTarget()for aV,aw in pairs(Utils:GetEnemyHeroesInRange(myHero.pos,E.range))do local bn=aw;if self:HasEbuff(aw)then if _G.SDK then _G.SDK.Orbwalker.ForceTarget=aw elseif _G.EOWLoaded then EOW:ForceTarget(aw)elseif _G.GOS then GOS:ForceTarget(aw)end end end end;function Tristana:ForceMinion()for aV,aw in pairs(Utils:GetEnemyMinionsInRange(myHero.pos,E.range))do local bn=aw;if self:HasEbuff(aw)then if _G.SDK then _G.SDK.Orbwalker.ForceTarget=aw elseif _G.EOWLoaded then EOW:ForceTarget(aw)elseif _G.GOS then GOS:ForceTarget(aw)end end end end;function Tristana:UpdateRange()local bo=myHero.levelData.lvl;local bp=myHero:GetSpellData(_R).level;local Z=525+8*(bo-1)local bq=({600,800,1000})[bp]if E and E.range then E.range=Z end;if Q and Q.range then Q.range=Z end;if R and R.range and bp>0 then R.range=Z end;R.knockbackRange=bq end;function Tristana:ReleaseTarget()if#Utils:GetEnemyHeroesInRange(myHero.pos,E.range)==0 then if _G.SDK then _G.SDK.Orbwalker.ForceTarget=nil elseif _G.EOWLoaded then EOW:ForceTarget(nil)elseif _G.GOS then GOS:ForceTarget(nil)end end end;function Tristana:ReleaseMinions()if#Utils:GetEnemyMinionsInRange(myHero.pos,E.range)==0 then if _G.SDK then _G.SDK.Orbwalker.ForceTarget=nil elseif _G.EOWLoaded then EOW:ForceTarget(nil)elseif _G.GOS then GOS:ForceTarget(nil)end end end;function Tristana:HasEbuff(X)for a4=1,X.buffCount do local a5=X:GetBuff(a4)if a5 and a5.name=="tristanaechargesound"then return true end end;return false end;function Tristana:GetEstacks(X)local br=0;if self:HasEbuff(X)then for a4=1,X.buffCount do local a5=X:GetBuff(a4)if a5 and a5.count>0 and a5.name:lower()=="tristanaecharge"then br=a5.count end end end;return br end;function Tristana:GetEdmg(X,bs)local bt=0;local bu=myHero:GetSpellData(_E).level;if bu>0 then local bv=({60,70,80,90,100})[bu]local bw=({.5,.6,.7,.8,.9})[bu]local bx=bw*myHero.bonusDamage;bt=bv+bx;bt=bt+self:GetStackDmg(X)*bs end;return Utils:CalculatePhysicalDamage(X,bt)end;function Tristana:GetStackDmg(X)local bt=0;local bu=myHero:GetSpellData(_E).level;if bu>0 then local bv=({18,21,24,27,30})[bu]local bw=({.15,.18,.21,.24,.27})[bu]local bx=bw*myHero.bonusDamage;bt=bv+bx end;return bt end;function Tristana:GetRdmg(X)local bt=0;local by=myHero:GetSpellData(_R).level;if by>0 then local bv=({300,400,500})[by]local bz=myHero.ap;bt=bv+bz end;return Utils:CalculateMagicalDamage(X,bt)end;function Tristana:GetERdmg(X,bs)return self:GetEdmg(X,bs+1)+self:GetRdmg(X)end;function Tristana:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)then if myHero.attackData.state~=STATE_WINDUP then Control.CastSpell(HK_Q)end end end;function Tristana:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)then if myHero.attackData.state~=STATE_WINDUP then Control.CastSpell(HK_E,X.pos)end end end;function Tristana:CastRkill(X)if Utils:IsValid(X,myHero.pos,R.range)then if self:GetERdmg(X,self:GetEstacks(X))>X.health or self:GetRdmg(X)>X.health then Control.CastSpell(HK_R,X)end end end;function Tristana:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end;if self.rTarget then if bA then self:CastRkill(self.rTarget)end end end;function Tristana:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;class"Jinx"function Jinx:__init()if p~="Jinx"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)Callback.Add("Draw",function()self:OnDraw()end)end;function Jinx:LoadSpells()attackRange=525;Q={range=600}W={range=1450,speed=myHero:GetSpellData(_W).speed,width=75,delay=0.5,collision=Collision:SetSpell(1450,myHero:GetSpellData(_W).speed,0.6,myHero:GetSpellData(_W).width,true)}E={range=900,speed=myHero:GetSpellData(_E).speed,width=250,delay=0.5}R={range=25000,speed=1700,width=140,delay=0.6}end;function Jinx:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useQtoggle",name="Passive Logic Toggle",key=string.byte("T"),toggle=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Combo:MenuElement({id="useKs",name="KS everything!",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function Jinx:OnTick()self.isQ1=myHero:GetSpellData(_Q).toggleState==1;self:UpdateRange()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)self.rTarget=Utils:GetTarget(R.range)if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Jinx:UpdateRange()local bB=myHero:GetSpellData(_Q).level;local Z=({800,825,850,875,900})[bB]if bB>0 then Q.range=Z end end;function Jinx:GetQstacks()for a4=1,myHero.buffCount do local a5=myHero:GetBuff(a4)if a5 then if a5.count>0 and a5.name:lower()=="jinxqramp"then return a5.count end end end end;function Jinx:CastQcombo(X)local bC=self:GetQstacks()or 0;if myHero.attackData.state==STATE_WINDUP then return end;if self.isQ1 then if Utils:IsValid(X,myHero.pos,Q.range)then if bC==3 and Menu.Combo.useQtoggle:Value()or Utils:GetDistance(myHero.pos,X.pos)>attackRange then Control.CastSpell(HK_Q)end end else if Utils:IsValid(X,myHero.pos,attackRange)then if(bC<3 or not Menu.Combo.useQtoggle:Value())and myHero.totalDamage<X.health then Control.CastSpell(HK_Q)end end end end;function Jinx:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)then if Utils:GetDistance(myHero.pos,X.pos)<Q.range then return end;if myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then local b6,b7=W.collision:__GetCollision(myHero.pos,b4,5)if not b6 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<W.range then Utils:CastSpell(HK_W,b4,W.range)end end end else if a_ and b0 and a_.networkID==X.networkID then local b6,b7=W.collision:__GetCollision(myHero.pos,b0,5)if not b6 then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<W.range then Utils:CastSpell(HK_W,b0,W.range)end end end;if b1 and b2 then if b1>=b5 or b1>=1 and X.health<self:GetWdmg(X)and Menu.Combo.useKs:Value()then local b6,b7=W.collision:__GetCollision(myHero.pos,b2,5)if not b6 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<W.range then Utils:CastSpell(HK_W,b2,W.range)end end end end end end end end;function Jinx:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)then if myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<E.range then Utils:CastSpell(HK_E,b4,E.range)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<E.range then Utils:CastSpell(HK_E,b0,E.range)end end end end end end;function Jinx:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range*0.5)then if self:GetRdmg(X)>X.health and Utils:GetDistance(X.pos,myHero.pos)>Q.range then if myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,R.range,R.delay,R.speed,R.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,R.range,R.delay,R.speed,R.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,R.speed,R.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if Utils:GetDistance(b4,myHero.pos)<R.range then if b4:To2D().onScreen then Utils:CastSpell(HK_R,b4,R.range)else Utils:CastSpellMM(HK_R,b4,R.range)end end end else if a_ and b0 and a_.networkID==X.networkID then if Utils:GetDistance(b0,myHero.pos)<R.range then if b0:To2D().onScreen then Utils:CastSpell(HK_R,b0,R.range)else Utils:CastSpellMM(HK_R,b0,R.range)end end end;if b1 and b2 then if b1>=b5 or b1>=2 and X.health<self:GetRdmg(X)and Menu.Combo.useKs:Value()then if Utils:GetDistance(b2,myHero.pos)<R.range then if b2:To2D().onScreen then Utils:CastSpell(HK_R,b2,R.range)else Utils:CastSpellMM(HK_R,b2,R.range)end end end end end end end end end;function Jinx:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if b9 then if#Utils:GetEnemyHeroesInRange(myHero.pos,Q.range)==0 and not self.isQ1 then Control.CastSpell(HK_Q)end end;if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end;if bA and self.rTarget then self:CastRcombo(self.rTarget)end end;function Jinx:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if b9 then if#Utils:GetEnemyHeroesInRange(myHero.pos,Q.range)==0 and not self.isQ1 then Control.CastSpell(HK_Q)end end;if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Jinx:GetWdmg(X)local bf=0;if X then local bg=myHero:GetSpellData(_W).level;if bg>0 then local bh=({10,60,110,160,210})[bg]local bD=myHero.totalDamage*1.4;totalDamage=bh+bD end end;return Utils:CalculatePhysicalDamage(X,bf)end;function Jinx:GetRdmg(X)local bf=0;if X then local by=myHero:GetSpellData(_R).level;local bh=({250,350,450})[by]local bE=myHero.bonusDamage*1.5;if by>0 then local bF=({0.25,0.3,0.35})[by]*(X.maxHealth-X.health)local bG=Utils:GetDistance(myHero.pos,X.pos)local bH=bh+bE+bF;local bI=bH*0.1;if bG<1500 then bG=bG else bG=1500 end;bf=bI+0.06*bI*bG*0.1 end end;return Utils:CalculatePhysicalDamage(X,bf)end;function Jinx:OnDraw()local bc=myHero.pos:To2D()if not Menu.Combo.useQtoggle:Value()then Draw.Text("Q logic OFF",12,bc.x-20,bc.y+50,Draw.Color(255,255,0,0))end end;class"Caitlyn"function Caitlyn:__init()if p~="Caitlyn"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)lastTrap=GetTickCount()end;function Caitlyn:LoadSpells()attackRange=650;Q={range=1250,speed=2200,width=90,delay=0.625}W={range=800,speed=l,width=75,delay=0.25}E={range=750,speed=1500,width=60,delay=0.25,collision=Collision:SetSpell(750,1500,0.25,60,true)}R={range=2000,speed=3200,collision=Collision:SetSpell(2000,3200,0.25,75,false)}end;function Caitlyn:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function Caitlyn:OnTick()self:UpdateRange()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)self.rTarget=Utils:GetTarget(R.range)if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Caitlyn:UpdateRange()local by=myHero:GetSpellData(_R).level;local Z=2000;if by>0 then Z=({2000,2500,3000})[by]R.range=Z;R.collision=Collision:SetSpell(Z,3200,0.25,75,false)end end;function Caitlyn:CastQcombo(X)local by=myHero:GetSpellData(_R).level;local bJ=0;if not X then return end;if by>0 then bJ=myHero:GetSpellData(_R).mana end;if myHero.attackData.state==STATE_WINDUP or myHero.mana<=bJ and Utils:IsReady(_R)then return end;if Utils:IsValid(X,myHero.pos,Q.range)and Utils:GetDistance(X.pos,myHero.pos)>attackRange and not Utils:HasBuff(X,"caitlynyordletrapinternal")then local a_,b0=HPred:GetReliableTarget(myHero.pos,Q.range,Q.delay,Q.speed,Q.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,Q.range,Q.delay,Q.speed,Q.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,Q.speed,Q.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<Q.range then Utils:CastSpell(HK_Q,b4,Q.range)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<Q.range then Utils:CastSpell(HK_Q,b0,Q.range)end end;if b1 and b2 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<E.range then if b1>=b5 or b1>=1 and self:GetComboDmg(X)>X.health then Utils:CastSpell(HK_Q,b2,Q.range)end end end end end end;function Caitlyn:CastWcombo(X)if not X then return end;if myHero.attackData.state==STATE_WINDUP or lastTrap+2500>GetTickCount()then return end;if Utils:IsValid(X,myHero.pos,W.range)then if Utils:HasBuff(X,"caitlynyordletrapinternal")then return end;local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,.1,false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<W.range then Utils:CastSpell(HK_W,b4,W.range)lastTrap=GetTickCount()end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<W.range then Utils:CastSpell(HK_W,b0,W.range)lastTrap=GetTickCount()end end;if b1 and b2 and b1>3 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<W.range then Utils:CastSpell(HK_W,b2,W.range)lastTrap=GetTickCount()end end end end end;function Caitlyn:CastEcombo(X)if not X then return end;if Utils:IsValid(X,myHero.pos,E.range)then if myHero.attackData.state~=STATE_WINDUP and not Utils:HasBuff(X,"caitlynyordletrapinternal")then local a_,b0=HPred:GetReliableTarget(myHero.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,E.range,E.delay,E.speed,E.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then local b6,b7=E.collision:__GetCollision(myHero.pos,b4,5)if not b6 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<E.range then Utils:CastSpell(HK_E,b4,E.range)end end end else if a_ and b0 and a_.networkID==X.networkID then local b6,b7=E.collision:__GetCollision(myHero.pos,b0,5)if not b6 then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<E.range then Utils:CastSpell(HK_E,b0,E.range)end end end;if b1 and b2 then local b6,b7=E.collision:__GetCollision(myHero.pos,b2,5)if b2:To2D().onScreen and not b6 and Utils:GetDistance(b2,myHero.pos)<E.range then if b1>=b5 or b1>=1 and self:GetComboDmg(X)>X.health then Utils:CastSpell(HK_E,b2,E.range)end end end end end end end;function Caitlyn:CastRcombo(X)if not X then return end;if Utils:IsValid(X,myHero.pos,R.range)then if myHero.attackData.state~=STATE_WINDUP and Utils:GetDistance(X.pos,myHero.pos)>Q.range and self:GetRdmg(X)>X.health then local b6,b7=R.collision:__GetHeroCollision(myHero.pos,X.pos,3,X)if not b6 then if Utils:GetDistance(X.pos,myHero.pos)<R.range then if X.pos:To2D().onScreen then Control.CastSpell(HK_R,X)else Utils:CastSpellMM(HK_R,X.pos,R.range)end end end end end end;function Caitlyn:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if myHero.attackData.state~=STATE_WINDUP and Orb.canAttack then if#Utils:GetEnemyHeroesInRange(myHero.pos,attackRange*2)>0 then for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,attackRange*2)do local bn=Utils:GetEnemyHeroesInRange(myHero.pos,attackRange*2)[a4]if bn then if Utils:IsValid(bn,myHero.pos,attackRange*2)then if Utils:HasBuff(bn,"caitlynyordletrapinternal")then Control.Attack(bn)break end end end end end end;if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end;if bA and self.rTarget then self:CastRcombo(self.rTarget)end end;function Caitlyn:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if myHero.attackData.state~=STATE_WINDUP then if#Utils:GetEnemyHeroesInRange(myHero.pos,attackRange*2)>0 then for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,attackRange*2)do local bn=Utils:GetEnemyHeroesInRange(myHero.pos,attackRange*2)[a4]if bn then if Utils:IsValid(bn,myHero.pos,attackRange*2)then if Utils:HasBuff(bn,"caitlynyordletrapinternal")then Control.Attack(bn)end end end end end end;if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Caitlyn:GetRdmg(X)local bf=0;if X then local by=myHero:GetSpellData(_R).level;if by>0 then local bh=({250,475,700})[by]local bE=myHero.bonusDamage*2;bf=bh+bE end end;return Utils:CalculatePhysicalDamage(X,bf)end;function Caitlyn:GetQdmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;if bB>0 then local bh=({30,70,110,150,190})[bB]local bE=({1.3,1.4,1.5,1.6,1.7})[bB]bf=bh+bE*myHero.totalDamage end end;return Utils:CalculatePhysicalDamage(X,bf)end;function Caitlyn:GetComboDmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;local by=myHero:GetSpellData(_R).level;if bB>0 then bf=bf+self:GetQdmg(X)end;if by>0 then bf=bf+self:GetRdmg(X)end;bf=bf+myHero.totalDamage*1.5 end;return bf end;class"Kayn"function Kayn:__init()if p~="Kayn"then return end;self.rangeUpdated=false;self.lastParticleCheck=GetTickCount()self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)Callback.Add("Draw",function()self:OnDraw()end)end;function Kayn:LoadSpells()Q={range=350,width=100,delay=0.25,speed=1000}W={range=myHero:GetSpellData(_W).range,width=175,delay=0.25,speed=1750}E={range=400}R={range=550}end;function Kayn:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Clear",name="Clear Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Combo:MenuElement({id="useRmyHp",name="Use R if my HP < %",value=50,min=0,max=100,step=1})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Clear:MenuElement({id="useQ",name="Use Q",value=true})Menu.Clear:MenuElement({id="useW",name="Use W",value=true})end;function Kayn:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.rTarget=Utils:GetTarget(R.range)if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()elseif Orb.laneClear or Orb.jungleClear then self:Clear()end end end;function Kayn:CastQcombo(X)if not X then return end;if myHero.attackData.state==STATE_WINDUP then return end;local bK=Q.range+W.range;local bL=Q.range+Q.range;if Utils:IsValid(X,myHero.pos,bL)or Utils:IsValid(X,myHero.pos,bK)and X.health<self:GetComboDmg(X)then if myHero.attackData.state~=STATE_WINDUP then local bl=Utils:GetPred(X,Q.speed,Q.delay)if bl then Utils:CastSpell(HK_Q,bl,Q.range+W.range)end end end end;function Kayn:CastWcombo(X)if not X then return end;if myHero.attackData.state==STATE_WINDUP then return end;if Utils:IsValid(X,myHero.pos,W.range)then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local bM,bN=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<W.range then Utils:CastSpell(HK_W,b4,W.range)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<W.range then Utils:CastSpell(HK_W,b0,W.range)end end;if b1 and b2 then if b1>=b5 or b1>=1 and self:GetComboDmg(X)>=X.health then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<W.range then Utils:CastSpell(HK_W,b2,W.range)end end end end end end;function Kayn:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range)then if Utils:IsParticleInRange("kayn_base_primary_r_mark",X.pos,X.boundingRadius)then if self:GetComboDmg(X)>=X.health or Utils:GetHpPercent(myHero)<Menu.Combo.useRmyHp:Value()then Control.CastSpell(HK_R,X)end end end end;function Kayn:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if#Utils:GetEnemyHeroesInRange(myHero.pos,R.range)>0 then for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,R.range)do local bn=Utils:GetEnemyHeroesInRange(myHero.pos,R.range)[a4]if bn and bA then self:CastRcombo(bn)end end end end;function Kayn:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end end;function Kayn:Clear()local b9=Menu.Clear.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Clear.useW:Value()and Utils:IsReady(_W)for a4=1,t()do local bw=u(a4)if bw and Utils:IsValid(bw,myHero.pos,W.range)then if ba then Utils:CastSpell(HK_W,bw.pos,W.range)end;if b9 and Utils:GetDistance(bw.pos,myHero.pos)<=Q.range+Q.width then Utils:CastSpell(HK_Q,bw.pos,Q.range)end end end end;function Kayn:GetQdmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;if bB>0 then local bh=({60,80,100,120,140})[bB]local bO=0.65;bf=bh+bO*myHero.bonusDamage end end;return Utils:CalculatePhysicalDamage(X,bf)end;function Kayn:GetWdmg(X)local bf=0;if X then local bg=myHero:GetSpellData(_W).level;if bg>0 then local bh=({90,135,180,225,270})[bg]local bO=1.3;bf=bh+bO*myHero.bonusDamage end end;return Utils:CalculatePhysicalDamage(X,bf)end;function Kayn:GetRdmg(X)local bf=0;if X then local by=myHero:GetSpellData(_R).level;if by>0 then local bh=({150,250,350})[by]local bE=1.75;bf=bh+bE*myHero.bonusDamage end end;return Utils:CalculatePhysicalDamage(X,bf)end;function Kayn:GetComboDmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;local bg=myHero:GetSpellData(_W).level;local by=myHero:GetSpellData(_R).level;if bB>0 then bf=bf+self:GetQdmg(X)end;if bg>0 then bf=bf+self:GetWdmg(X)end;if by>0 then bf=bf+self:GetRdmg(X)end;bf=bf+myHero.totalDamage end;return bf end;function Kayn:ParticleHandler()for a4=1,D()do local a7=F(a4)if a7 and not a7.dead then local bP=a7.pos:To2D()local bQ=myHero.pos:To2D()local Y=a7.pos;if Utils:GetDistance(Y,myHero.pos)<=1000 then if bP.onScreen then if i(a7.name:lower(),"orb")and Utils:GetDistance(Y,myHero.pos)<1000 then if i(a7.name:lower(),"assassin")then Draw.Circle(Y,40,2,Draw.Color(150,0,100,255))end;if i(a7.name:lower(),"slayer")then Draw.Circle(Y,40,2,Draw.Color(150,255,100,0))end else if self.rangeUpdated and i(a7.name:lower(),"base_assassin")and Utils:GetDistance(Y,myHero.pos)<50 then self.rangeUpdated=true;W.range=myHero:GetSpellData(_W).range;W.delay=0 end end end end end end end;function Kayn:OnDraw()if self.lastParticleCheck+100<GetTickCount()then self:ParticleHandler()self.lastParticleCheck=GetTickCount()end end;class"MasterYi"function MasterYi:__init()if p~="MasterYi"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)if _G.SDK then _G.SDK.Orbwalker:OnPostAttack(function()self:OnPostAttack()end)elseif _G.EOW then EOW:AddCallback(EOW.AfterAttack,function()self:OnPostAttack()end)elseif _G.GOS then GOS:OnAttackComplete(function()self:OnPostAttack()end)end end;function MasterYi:LoadSpells()attackRange=myHero.range+myHero.boundingRadius;Q={range=myHero:GetSpellData(_Q).range,delay=0.25}W={range=500}E={}R={}end;function MasterYi:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="auto",name="AutoWin",value=true,tooltip="Kappa"})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function MasterYi:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.eTarget=Utils:GetTarget(Q.range)if#Utils:GetEnemyHeroesInRange(myHero.pos,attackRange)>0 or myHero.attackData.state==STATE_WINDUP then Orb:DisableMovement(true)else Orb:DisableMovement(false)end;if not myHero.dead then if not I then if Orb.combo then self:Combo()end end end end;function MasterYi:OnPostAttack()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)if(Orb.combo or Orb.harass)and b9 then if#Utils:GetEnemyHeroesInRange(myHero.pos,attackRange*2)>0 then for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,attackRange*2)do local aW=Utils:GetEnemyHeroesInRange(myHero.pos,attackRange*2)[a4]if aW then if Utils:IsValid(aW,myHero.pos,Q.range)then Control.CastSpell(HK_Q,aW)break end end end end end end;function MasterYi:CastQcombo(X)if X and Utils:IsValid(X,myHero.pos,Q.range)then if Utils:GetDistance(X.pos,myHero.pos)>attackRange then Control.CastSpell(HK_Q,X)end end end;function MasterYi:CastQdodge()for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,1000)do local aW=Utils:GetEnemyHeroesInRange(myHero.pos,1000)[a4]if aW then if aW.activeSpell and aW.activeSpell.valid and(aW.activeSpell.target==myHero.handle or Utils:GetDistance(aW.activeSpell.placementPos,myHero.pos)<=myHero.boundingRadius*2+aW.activeSpell.width)and not i(aW.activeSpell.name:lower(),"attack")then local bR=aW.activeSpell.startPos;local bS=aW.activeSpell.placementPos;local be=0;if aW.activeSpell.width>0 then be=aW.activeSpell.width else be=100 end;local bG=Utils:GetDistance(myHero.pos,bS)if aW.activeSpell.target==myHero.handle then self:Qdodge()return else if bG<=be*2+myHero.boundingRadius then self:Qdodge()break end end end end end end;function MasterYi:Qdodge()for aV,aw in pairs(Utils:GetEnemyHeroesInRange(myHero.pos,Q.range))do local ao=aw;if ao then if Utils:IsValid(ao,myHero.pos,Q.range)then Control.CastSpell(HK_Q,ao)return end end end;for aV,aw in pairs(Utils:GetEnemyMinionsInRange(myHero.pos,Q.range))do local bT=aw;if bT then if Utils:IsValid(bT,myHero.pos,Q.range)then Control.CastSpell(HK_Q,bT)break end end end end;function MasterYi:CastEcombo(X)if#Utils:GetEnemyHeroesInRange(myHero.pos,attackRange)>0 then for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,attackRange)do local aW=Utils:GetEnemyHeroesInRange(myHero.pos,attackRange)[a4]if aW then if Utils:IsValid(aW,myHero.pos,attackRange)then Control.CastSpell(HK_E)break end end end end end;function MasterYi:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if b9 then self:CastQdodge()if self.qTarget then self:CastQcombo(self.qTarget)end end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function MasterYi:GetQdmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;if bB>0 then local bh=({25,60,95,130,165})[bB]bf=bh+myHero.totalDamage end end;return Utils:CalculatePhysicalDamage(X,bf)end;function MasterYi:GetComboDmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;if bB>0 then bf=bf+self:GetQdmg(X)end;bf=bf+myHero.totalDamage end;return bf end;class"Syndra"function Syndra:__init()if p~="Syndra"then return end;self.lastParticleCheck=GetTickCount()self.lastCast=GetTickCount()self:LoadSpells()self:LoadMenu()_Balls={}self.wState=1;self.rangeUpdated=false;Callback.Add("Tick",function()self:OnTick()end)Callback.Add("Draw",function()self:OnDraw()end)end;function Syndra:LoadSpells()Q={range=800,delay=0.25,width=175,speed=1750}W={range=925,delay=0.25,width=225,speed=1450}QE={range=1100,delay=0.25,width=150,speed=2500}E={range=700,delay=0.25,width=150,speed=2500}R={range=675,delay=0.25,speed=l}end;function Syndra:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Misc",name="Misc Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})Menu.Misc:MenuElement({id="drawings",name="Fancy Drawings",value=true})end;function Syndra:OnTick()self.wState=myHero:GetSpellData(_W).toggleState;self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)self.rTarget=Utils:GetTarget(R.range)self.qEtarget=Utils:GetTarget(QE.range)if not self.rangeUpdated then if myHero.levelData.lvl>6 then R.range=750;self.rangeUpdated=true end end;if myHero.alive then if self.qTarget then if Utils:IsReady(_Q)then Orb:DisableAttacks(true)else Orb:DisableAttacks(false)end else Orb:DisableAttacks(false)end;if self.lastParticleCheck+500<GetTickCount()then self:GetBalls()end;if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end end;function Syndra:CastQcombo(X)if X then local bL=Q.range+Q.width;if Utils:IsValid(X,myHero.pos,bL)then local a_,b0=HPred:GetReliableTarget(myHero.pos,bL,Q.delay,Q.speed,Q.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,bL,Q.delay,Q.speed,Q.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,Q.speed,Q.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<=bL then Utils:CastSpell(HK_Q,b4,Q.range)self.lastCast=GetTickCount()return end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<=bL then Utils:CastSpell(HK_Q,b0,Q.range)self.lastCast=GetTickCount()return end end;if b1 and b2 then if b1>=b5 or b1>=1 and self:GetComboDmg(X)>=X.health then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<bL then Utils:CastSpell(HK_Q,b2,Q.range)self.lastCast=GetTickCount()end end end end end end end;function Syndra:CastW1combo(X)for aV,bU in pairs(_Balls)do if bU then if bU.object.valid and bU.pos:To2D().onScreen then if Utils:GetDistance(bU.pos,myHero.pos)<=W.range then Control.CastSpell(HK_W,bU.pos)self.lastCast=GetTickCount()return end end end end;if#Utils:GetEnemyMinionsInRange(myHero.pos,W.range)>0 then for a4=1,#Utils:GetEnemyMinionsInRange(myHero.pos,W.range)do local bT=Utils:GetEnemyMinionsInRange(myHero.pos,W.range)[a4]if bT then if Utils:IsValid(bT,myHero.pos,W.range)and bT.pos:To2D().onScreen then Control.CastSpell(HK_W,bT)self.lastCast=GetTickCount()break end end end end end;function Syndra:CastW2combo(X)if Utils:IsValid(X,myHero.pos,W.range)then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<=W.range then Utils:CastSpell(HK_W,b4,W.range)self.lastCast=GetTickCount()return end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<=W.range then Utils:CastSpell(HK_W,b0,W.range)self.lastCast=GetTickCount()return end end;if b1 and b2 then if b1>=b5 or b1>=1 and self:GetComboDmg(X)>=X.health then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<=W.range then Utils:CastSpell(HK_W,b2,W.range)self.lastCast=GetTickCount()end end end end end end;function Syndra:CastEcombo(X)local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)if Utils:GetDistance(X.pos,myHero.pos)>Q.range+Q.width and Utils:GetDistance(X.pos,myHero.pos)<QE.range and b9 then local bV=myHero.pos:Extended(X.pos,E.range)Utils:CastSpell(HK_Q,bV,E.range)end;if Utils:IsValid(X,myHero.pos,E.range*.75)then Utils:CastSpell(HK_E,X.pos,E.range)end end;function Syndra:CastQecombo(X)local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)if Utils:IsValid(X,myHero.pos,QE.range)then if Utils:GetDistance(X.pos,myHero.pos)>Q.range+Q.width and Utils:GetDistance(X.pos,myHero.pos)<QE.range and b9 then local bV=myHero.pos:Extended(X.pos,E.range)Utils:CastSpell(HK_Q,bV,E.range)end;for aV,bU in pairs(_Balls)do if bU then if Utils:GetDistance(bU.pos,myHero.pos)<=E.range then local bG=QE.range;local bW=myHero.pos:Extended(bU.pos,bG)local bX=bU.object.boundingRadius;for a4=bX,bG,bX do local aW=myHero.pos:Extended(bW,a4)if Menu.Misc.drawings:Value()then Draw.Circle(aW,bU.object.boundingRadius,2,Draw.Color(254,138,43,226))end;if Utils:GetDistance(X.pos,aW)<=bX+X.boundingRadius then Utils:CastSpell(HK_E,bU.pos,E.range)end end end end end end end;function Syndra:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range+200)then if X.health<=self:GetRdmg(X)and Utils:GetDistance(X.pos,myHero.pos)<=R.range then Control.CastSpell(HK_R,X)end end end;function Syndra:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)and self.lastCast+100<GetTickCount()local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)and self.lastCast+100<GetTickCount()and self.wState==1;local bY=Menu.Combo.useW:Value()and Utils:IsReady(_W)and self.lastCast+500<GetTickCount()and self.wState==2;local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if not eReady then if ba and self.wTarget then self:CastW1combo(self.wTarget)end;if bY and self.wTarget then self:CastW2combo(self.wTarget)end end;if eReady then if self.qEtarget then self:CastQecombo(self.qEtarget)return else if self.eTarget then self:CastECombo(self.eTarget)end end end;if bA and self.rTarget then self:CastRcombo(self.rTarget)end end;function Syndra:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)and self.lastCast+100<GetTickCount()local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)and self.lastCast+100<GetTickCount()and self.wState==1;local bY=Menu.Harass.useW:Value()and Utils:IsReady(_W)and self.lastCast+100<GetTickCount()and self.wState==2;local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)and self.lastCast+100<GetTickCount()if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if not eReady then if ba and self.wTarget then self:CastW1combo(self.wTarget)end;if bY and self.wTarget then self:CastW2combo(self.wTarget)end end;if eReady then if self.qEtarget then self:CastQecombo(self.qEtarget)return else if self.eTarget then self:CastECombo(self.eTarget)end end end end;function Syndra:GetBalls()_balls={}if self.lastParticleCheck+50>GetTickCount()then return end;for a4=1,z()do local bZ=A(a4)if bZ and bZ.valid then local b_=bZ.charName;if b_:lower()=="syndrasphere"then if not _balls[bZ.networkID]then local c0=bZ.pos;_balls[bZ.networkID]={}_balls[bZ.networkID]["object"]=bZ;_balls[bZ.networkID]["pos"]=c0 end end end end;_Balls=_balls;self.lastParticleCheck=GetTickCount()end;function Syndra:GetComboDmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;local bg=myHero:GetSpellData(_W).level;local bu=myHero:GetSpellData(_E).level;local by=myHero:GetSpellData(_R).level;if bB>0 then bf=bf+self:GetQdmg(X)end;if bg>0 then bf=bf+self:GetWdmg(X)end;if bu>0 then bf=bf+self:GetEdmg(X)end;if by>0 then bf=bf+self:GetRdmg(X)end end;return bf end;function Syndra:GetQdmg(X)return 0 end;function Syndra:GetWdmg(X)return 0 end;function Syndra:GetEdmg(X)return 0 end;function Syndra:GetRdmg(X)if not X then return 0 end;local bf=0;local c1=3;if#_Balls>0 then c1=c1+#_Balls end;if c1>7 then c1=7 end;if X then local by=myHero:GetSpellData(_R).level;if by>0 then local bh=({90,135,180})[by]local bz=0.2*myHero.ap;bf=(bh+bz)*c1 end end;return Utils:CalculateMagicalDamage(X,bf)end;function Syndra:OnDraw()if Menu.Misc.drawings:Value()then for aV,bU in pairs(_Balls)do if bU then Draw.Circle(bU.pos,bU.object.boundingRadius,2,Draw.Color(255,138,43,226))if Utils:IsReady(_E)and Utils:GetDistance(bU.pos,myHero.pos)<=E.range then local bW=myHero.pos:Extended(bU.pos,QE.range)Draw.Line(bU.pos:To2D().x,bU.pos:To2D().y,bW:To2D().x,bW:To2D().y,1,Draw.Color(255,138,43,226))Draw.Circle(bW,bU.object.boundingRadius,2,Draw.Color(120,138,43,226))end end end end end;class"Swain"function Swain:__init()if p~="Swain"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)Callback.Add("Draw",function()self:OnDraw()end)end;function Swain:LoadSpells()Q={range=700,delay=0.25}W={range=3500,width=125,speed=l,delay=0.25}E={range=950,width=65,speed=775,delay=0.33,collision=Collision:SetSpell(950,775,0.33,65,false)}R={range=myHero:GetSpellData(_R).range}end;function Swain:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="disableAA",name="Use Smart AA switch",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function Swain:OnTick()if Menu.Combo.disableAA:Value()and Utils:HasBuff(myHero,"swainr")and self:AllowAttacks()==false then Orb:DisableAttacks(true)else Orb:DisableAttacks(false)end;if myHero.attackData.state~=STATE_WINDUP and Orb.canAttack then if#Utils:GetEnemyHeroesInRange(myHero.pos,E.range)>0 then for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,E.range)do local bn=Utils:GetEnemyHeroesInRange(myHero.pos,E.range)[a4]if bn then if Utils:IsValid(bn,myHero.pos,E.range)and Utils:IsImmobile(bn)and not myHero.attackData.state==STATE_WINDUP then Control.Attack(bn)break end end end end end;self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Swain:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)then Utils:CastSpell(HK_Q,X.pos,Q.range)end end;function Swain:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)and Utils:IsImmobile(X)then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)if a_ and b0 and a_.networkID==X.networkID then if Utils:GetDistance(b0,myHero.pos)<W.range then if b0:To2D().onScreen then Utils:CastSpell(HK_W,b0,W.range)else Utils:CastSpellMM(HK_W,b0,W.range)end end end end end;function Swain:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)then local a_,b0=HPred:GetReliableTarget(myHero.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,E.range,E.delay,E.speed,E.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<E.range then local b6,b7=E.collision:__GetCollision(myHero.pos:Extended(b4,Utils:GetDistance(myHero.pos,b4)-50),myHero.pos:Extended(b4,E.range),5)if not b6 then Utils:CastSpell(HK_E,b4,E.range)return end end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<E.range then local b6,b7=E.collision:__GetCollision(myHero.pos:Extended(b0,Utils:GetDistance(myHero.pos,b0)-50),myHero.pos:Extended(b0,E.range),5)if not b6 then Utils:CastSpell(HK_E,b0,E.range)return end end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<=E.range then local b6,b7=E.collision:__GetCollision(myHero.pos:Extended(b2,Utils:GetDistance(myHero.pos,b2)-50),myHero.pos:Extended(b2,E.range),5)if not b6 then Utils:CastSpell(HK_E,b2,E.range)return end end end end end end end;function Swain:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Swain:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Swain:UltCharged()if not Utils:IsReady(_R)then return end;for a4=1,Game.ParticleCount()do local a7=Game.Particle(a4)if a7 and Utils:GetDistance(myHero.pos,a7.pos)<=200 and i(a7.name:lower(),"r_full")then return true end end;return false end;function Swain:AllowAttacks()for a4=1,myHero.buffCount do local a5=myHero:GetBuff(a4)if a5 and a5.count>0 and(i(a5.name:lower(),"itemfrozenfist")or i(a5.name:lower(),"sheen")or i(a5.name:lower(),"lichbane"))then return true end end;return false end;function Swain:OnDraw()if self:UltCharged()then Draw.Circle(myHero.pos,R.range,8,Draw.Color(180,255,0,0))end end;class"Tryndamere"function Tryndamere:__init()if p~="Tryndamere"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)end;function Tryndamere:LoadSpells()Q={range=600,delay=0.25}W={range=850}E={range=660,delay=0.1,width=225}R={range=500}end;function Tryndamere:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="qHp",name="HP % to use Q",value=50,min=0,max=100,step=1})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Combo:MenuElement({id="useRhp",name="Use R at x %HP",value=15,min=0,max=100,step=1})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function Tryndamere:OnTick()self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)and Utils:GetHpPercent(myHero)<=Menu.Combo.qHp:Value()and myHero.mana>=50;local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)and Utils:GetHpPercent(myHero)<=Menu.Combo.useRhp:Value()if b9 then self:CastQcombo()end;if bA then self:CastRcombo()end;if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Tryndamere:CastQcombo()for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,2000)do local aW=Utils:GetEnemyHeroesInRange(myHero.pos,2000)[a4]if aW then if aW.activeSpell and aW.activeSpell.valid and(aW.activeSpell.target==myHero.handle or Utils:GetDistance(aW.activeSpell.placementPos,myHero.pos)<=myHero.boundingRadius*2+aW.activeSpell.width)then local bR=aW.activeSpell.startPos;local bS=aW.activeSpell.placementPos;local be=0;if aW.activeSpell.width>0 then be=aW.activeSpell.width else be=100 end;local bG=Utils:GetDistance(myHero.pos,bS)if aW.activeSpell.target==myHero.handle then Control.CastSpell(HK_Q)return else if bG<=be*2+myHero.boundingRadius then Control.CastSpell(HK_Q)break end end end end end end;function Tryndamere:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)then if X.pathing.hasMovePath and Utils:GetDistance(X.pathing.endPos,myHero.pos)>W.range then Control.CastSpell(HK_W)end end end;function Tryndamere:CastEcombo()if#Utils:GetEnemyHeroesInRange(myHero.pos,E.range)>0 then for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,E.range)do local bn=Utils:GetEnemyHeroesInRange(myHero.pos,E.range)[a4]if bn then if self:GetComboDmg(bn)>bn.health or Utils:GetDistance(bn.pos,myHero.pos)>myHero.range then Utils:CastSpell(HK_E,bn.pos,E.range)break end end end end end;function Tryndamere:CastRcombo()for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,2000)do local aW=Utils:GetEnemyHeroesInRange(myHero.pos,2000)[a4]if aW then if aW.activeSpell and aW.activeSpell.valid and(aW.activeSpell.target==myHero.handle or Utils:GetDistance(aW.activeSpell.placementPos,myHero.pos)<=myHero.boundingRadius*2+aW.activeSpell.width)then local bR=aW.activeSpell.startPos;local bS=aW.activeSpell.placementPos;local be=0;if aW.activeSpell.width>0 then be=aW.activeSpell.width else be=100 end;local bG=Utils:GetDistance(myHero.pos,bS)if aW.activeSpell.target==myHero.handle then Control.CastSpell(HK_R)return else if bG<=be*2+myHero.boundingRadius then Control.CastSpell(HK_R)break end end end end end end;function Tryndamere:Combo()local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Tryndamere:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Tryndamere:GetComboDmg(X)local bf=0;if X then local bu=myHero:GetSpellData(_E).level;local by=myHero:GetSpellData(_R).level;if bu>0 then bf=bf+self:GetEdmg(X)end;if by>0 and Utils:IsReady(_R)then bf=bf+myHero.totalDamage*1.5*5 end end;return bf end;function Tryndamere:GetEdmg(X)local bf=0;if X then local bu=myHero:GetSpellData(_E).level;if bu>0 then local bh=({80,110,140,170,200})[bu]local c2=myHero.totalDamage;local bE=1.3*myHero.bonusDamage;local bz=myHero.ap;bf=bh+bE+bz+c2 end end;return Utils:CalculateMagicalDamage(X,bf)end;class"Darius"function Darius:__init()if p~="Darius"then return end;self.lastMove=GetTickCount()self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)if _G.SDK then _G.SDK.Orbwalker:OnPostAttack(function()self:OnPostAttack()end)elseif _G.EOW then EOW:AddCallback(EOW.AfterAttack,function()self:OnPostAttack()end)elseif _G.GOS then GOS:OnAttackComplete(function()self:OnPostAttack()end)end end;function Darius:LoadSpells()Q={range=450,outerRadius=425,innerRadius=205,delay=0.25}W={range=200}E={range=535}R={range=myHero:GetSpellData(_R).range}end;function Darius:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function Darius:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)self.rTarget=nil;if Utils:IsReady(_R)then if#Utils:GetEnemyHeroesInRange(myHero.pos,R.range)>0 then for aV,aw in pairs(Utils:GetEnemyHeroesInRange(myHero.pos,R.range))do local bn=aw;if bn then if bn.health<self:GetRdmg(bn)then self.rTarget=bn end end end end end;if#Utils:GetEnemyHeroesInRange(myHero.pos,Q.range)==0 then Orb:DisableMovement(false)end;if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Darius:CastQcombo(X)if X and Utils:IsValid(X,myHero.pos,Q.outerRadius)then Control.CastSpell(HK_Q)end end;function Darius:CastWcombo(X)if Utils:IsValid(X,myHero.pos,myHero.range+50)then if Utils:GetDistance(X.pathing.endPos,myHero.pos)>myHero.range+50 then Control.CastSpell(HK_W)end end end;function Darius:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)then Utils:CastSpell(HK_E,X.pos,E.range)end end;function Darius:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range)then Control.CastSpell(HK_R,X)end end;function Darius:OnPostAttack()if self.wTarget and self.wTarget.handle==myHero.attackData.target then if Utils:IsReady(_W)and Menu.Combo.useW:Value()then Control.CastSpell(HK_W)end end end;function Darius:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if self.qTarget then if Utils:HasBuff(myHero,"dariusqcast")then Orb:DisableMovement(true)if self.lastMove+120<GetTickCount()then if Utils:GetDistance(self.qTarget.pos,myHero.pos)>375 then Control.Move(myHero.pos:Extended(self.qTarget.pos,Utils:GetDistance(self.qTarget.pos,myHero.pos)+500))self.lastMove=GetTickCount()end;if Utils:GetDistance(self.qTarget.pos,myHero.pos)<250 then Control.Move(self.qTarget.pos:Extended(myHero.pos,Utils:GetDistance(self.qTarget.pos,myHero.pos)+500))self.lastMove=GetTickCount()end end else Orb:DisableMovement(false)end end;if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end;if bA and self.rTarget then self:CastRcombo(self.rTarget)end end;function Darius:GetHemoCount(X)if X then for a4=1,X.buffCount do local a5=X:GetBuff(a4)if a5 and a5.count>0 and a5.name:lower()=="dariushemo"then return a5.count end end end;return 0 end;function Darius:GetRdmg(X)local bf=0;if X then local by=myHero:GetSpellData(_R).level;if by>0 then local bs=self:GetHemoCount(X)local c3=({20,40,60})[by]local bh=({100,200,300})[by]local c4=0.75*myHero.bonusDamage;local c5=0.15*myHero.bonusDamage;bf=bf+bh+c4+bs*(c3+c5)end end;return bf end;function Darius:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;class"Jhin"function Jhin:__init()if p~="Jhin"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)Callback.Add("Draw",function()self:OnDraw()end)end;function Jhin:LoadSpells()attackRange=550;Q={range=550,bounceRadius=400}W={range=3000,speed=5000,width=40,delay=0.75}E={range=750,speed=l,width=120,delay=0.25}R={range=3500,speed=5000,width=80,delay=0.6,collision=Collision:SetSpell(3500,5000,0,80,true)}end;function Jhin:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useQtoggle",name="Passive Logic Toggle",key=string.byte("T"),toggle=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Combo:MenuElement({id="useKs",name="KS everything!",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function Jhin:OnTick()self.qTarget=Utils:GetTarget(Q.range+Q.bounceRadius)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range+E.width)self.rTarget=Utils:GetTarget(R.range)if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Jhin:IsUlting()return Utils:IsParticleInRange("jhin_base_r_viewcone",myHero.pos,200)end;function Jhin:CastQcombo(X)if myHero.attackData.state~=STATE_WINDUP or not Orb.canAttack then if Utils:IsValid(X,myHero.pos,Q.range)then Utils:CastSpell(HK_Q,X.pos,Q.range)end end end;function Jhin:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)and(Utils:HasBuff(X,"jhinespotteddebuff")or self:GetWdmg(X)>X.health)and(myHero.attackData.state~=STATE_WINDUP or not Orb.canAttack)then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<W.range then Utils:CastSpell(HK_W,b4,W.range)else Utils:CastSpell(HK_W,myHero.pos:Extended(b4,500),W.range)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<W.range then Utils:CastSpell(HK_W,b0,W.range)else Utils:CastSpell(HK_W,myHero.pos:Extended(b0,500),W.range)end end;if b1 and b2 then if b1>=b5 or b1>=1 and X.health<self:GetWdmg(X)then if Utils:GetDistance(b2,myHero.pos)<W.range then if b2:To2D().onScreen then Utils:CastSpell(HK_W,b2,W.range)else Utils:CastSpell(HK_W,myHero.pos:Extended(b2,500),W.range)end end end end end end end;function Jhin:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)and myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,E.range,E.delay,E.speed,E.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<E.range then Utils:CastSpell(HK_E,b4,E.range)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<E.range then Utils:CastSpell(HK_E,b0,E.range)end end;if b1 and b2 then if b1>=b5 or b1>=1 and X.health<self:GetWdmg(X)then if Utils:GetDistance(b2,myHero.pos)<E.range then if b2:To2D().onScreen then Utils:CastSpell(HK_E,b2,E.range)else Utils:CastSpell(HK_E,myHero.pos:Extended(b2,500),E.range)end end end end end end end;function Jhin:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range)then local a_,b0=HPred:GetReliableTarget(myHero.pos,R.range,R.delay,R.speed,R.width,.25,false)local b1,b2=HPred:GetHitchance(myHero.pos,X,R.range,R.delay,R.speed,R.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,R.speed,R.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if Utils:GetDistance(b4,myHero.pos)<R.range then local b6,b7=R.collision:__GetHeroCollision(myHero.pos,b4,3,X)if not b6 then if b4:To2D().onScreen then Utils:CastSpell(HK_R,b4,R.range)return else Utils:CastSpell(HK_R,myHero.pos:Extended(b4,500),R.range)return end end end end else if a_ and b0 and a_.networkID==X.networkID then if Utils:GetDistance(b0,myHero.pos)<R.range then local b6,b7=R.collision:__GetHeroCollision(myHero.pos,b0,3,X)if not b6 then if b0:To2D().onScreen then Utils:CastSpell(HK_R,b0,R.range)return else Utils:CastSpell(HK_R,myHero.pos:Extended(b0,500),R.range)return end end end end;if b1 and b2 then if b1 and b2 then if b1>=2 then if Utils:GetDistance(b2,myHero.pos)<R.range then local b6,b7=R.collision:__GetHeroCollision(myHero.pos,b2,3,X)if not b6 then if b2:To2D().onScreen then Utils:CastSpell(HK_R,b2,R.range)return else Utils:CastSpell(HK_R,myHero.pos:Extended(b2,500),R.range)end end end end end end end end end;function Jhin:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if not self:IsUlting()then if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end else if self.rTarget then self:CastRcombo(self.rTarget)end end end;function Jhin:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if not self:IsUlting()then if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end end;function Jhin:GetWdmg(X)local bf=0;if X then local bg=myHero:GetSpellData(_W).level;if bg>0 then local bh=({50,85,120,155,190})[bg]local bE=myHero.totalDamage*.5;bf=bh+bE end end;return Utils:CalculatePhysicalDamage(X,bf)end;function Jhin:OnDraw()if self:IsUlting()then Orb:DisableMovement(true)else Orb:DisableMovement(false)end end;class"Sivir"function Sivir:__init()if p~="Sivir"then return end;self:LoadSpells()self:LoadMenu()self.SpellsLoaded=false;Callback.Add("Tick",function()self:OnTick()end)if _G.SDK then _G.SDK.Orbwalker:OnPostAttack(function()self:OnPostAttack()end)elseif _G.EOW then EOW:AddCallback(EOW.AfterAttack,function()self:OnPostAttack()end)elseif _G.GOS then GOS:OnAttackComplete(function()self:OnPostAttack()end)end end;function Sivir:LoadSpells()Q={range=1250,delay=0.25,speed=1350,width=90}W={range=myHero.range}E={}R={}end;function Sivir:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Misc",name="Misc Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="eSettings",name="E settings",type=MENU})Menu.Combo.eSettings:MenuElement({id="spells",name="Spells to block",type=MENU})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Misc:MenuElement({id="drawSpells",name="Draw blocked spells",value=true})end;function Sivir:LoadBlockSpells()for a4=1,r(a4)do local a_=s(a4)if a_ and a_.isEnemy then for c6=0,3 do local bn=a_;local ak=bn:GetSpellData(c6).name;if c6==0 then Menu.Combo.eSettings.spells:MenuElement({id=ak,name=bn.charName.."- Q",value=true})end;if c6==1 then Menu.Combo.eSettings.spells:MenuElement({id=ak,name=bn.charName.."- W",value=true})end;if c6==2 then Menu.Combo.eSettings.spells:MenuElement({id=ak,name=bn.charName.."- E",value=true})end;if c6==3 then Menu.Combo.eSettings.spells:MenuElement({id=ak,name=bn.charName.."- R",value=true})end end end end end;function Sivir:OnTick()self.qTarget=Utils:GetTarget(Q.range)local c7=o()local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if not self.SpellsLoaded and o()>10 then self:LoadBlockSpells()self.SpellsLoaded=true end;if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end;if eReady and self.SpellsLoaded==true then for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,2000)do local aW=Utils:GetEnemyHeroesInRange(myHero.pos,2000)[a4]if aW then if aW.activeSpell and aW.activeSpell.valid and(aW.activeSpell.target==myHero.handle or Utils:GetDistance(aW.activeSpell.placementPos,myHero.pos)<=myHero.boundingRadius*2+aW.activeSpell.width)and not i(aW.activeSpell.name:lower(),"attack")then for c8=0,3 do local V=aW:GetSpellData(c8)if Menu.Combo.eSettings.spells[V.name]and Menu.Combo.eSettings.spells[V.name]:Value()and V.name==aW.activeSpell.name then local bR=aW.activeSpell.startPos;local bS=aW.activeSpell.placementPos;local be=0;if aW.activeSpell.width>0 then be=aW.activeSpell.width else be=100 end;local bG=Utils:GetDistance(myHero.pos,bS)if aW.activeSpell.target==myHero.handle then if Menu.Misc.drawSpells:Value()then print("Blocking(Targeted): "..V.name)end;Control.CastSpell(HK_E)return else if bG<=be*2+myHero.boundingRadius then if Menu.Misc.drawSpells:Value()then print("Blocking(Skillshot): "..V.name)end;Control.CastSpell(HK_E)break end end end end end end end end end;function Sivir:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)then local Z=myHero.range+X.boundingRadius;if Utils:GetDistance(X.pos,myHero.pos)<=Z and myHero.attackData.state~=STATE_WINDUP or Utils:GetDistance(X.pos,myHero.pos)>Z then local a_,b0=HPred:GetReliableTarget(myHero.pos,Q.range,Q.delay,Q.speed,Q.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,Q.range,Q.delay,Q.speed,Q.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,Q.speed,Q.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<Q.range then Utils:CastSpell(HK_Q,b4,Q.range)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<Q.range then Utils:CastSpell(HK_Q,b0,Q.range)end end;if b1 and b2 then if b1>=b5 or b1>=1 and X.health<self:GetQdmg(X)then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<Q.range then Utils:CastSpell(HK_Q,b2,Q.range)end end end end end end end;function Sivir:OnPostAttack()if Orb.combo or Orb.harass then if#Utils:GetEnemyHeroesInRange(myHero.pos,myHero.range+100)>0 then if Utils:IsReady(_W)and Menu.Combo.useW:Value()then Control.CastSpell(HK_W)end end end end;function Sivir:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end end;function Sivir:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end end;function Sivir:GetQdmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;if bB>0 then local bh=({35,55,75,95,115})[bB]local c9=({.7,.8,.9,1,1.1})[bB]local bE=myHero.totalDamage*c9;bf=(bh+bE)*1.85 end end;return Utils:CalculatePhysicalDamage(X,bf)end;class"Nasus"function Nasus:__init()if p~="Nasus"then return end;self:LoadSpells()self:LoadMenu()self.lastObjectLoop=GetTickCount()Callback.Add("Tick",function()self:OnTick()end)if _G.SDK then _G.SDK.Orbwalker:OnPostAttack(function()self:OnPostAttack()end)elseif _G.EOW then EOW:AddCallback(EOW.AfterAttack,function()self:OnPostAttack()end)elseif _G.GOS then GOS:OnAttackComplete(function()self:OnPostAttack()end)end;Callback.Add("Draw",function()self:OnDraw()end)end;function Nasus:LoadSpells()attackRange=myHero.range+myHero.boundingRadius;Q={range=attackRange+25}W={range=600}E={range=650,width=400}R={}Stacks={count=0,last=GetTickCount()}end;function Nasus:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Misc",name="Misc Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})Menu.Misc:MenuElement({id="drawLasthit",name="Draw Lasthit minions",value=true})end;function Nasus:OnTick()self.qTarget=Utils:GetTarget(Q.range+100)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range+E.width)if Stacks.last+1000<GetTickCount()then self:GetStacks()end;self:UpdateRange()if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()elseif Orb.laneClear or Orb.jungleClear or Orb.lastHit then self:Clear()end end;function Nasus:OnPostAttack()if Orb.combo or Orb.harass then if#Utils:GetEnemyHeroesInRange(myHero.pos,Q.range+myHero.boundingRadius*2)>0 then if Utils:IsReady(_Q)and Menu.Combo.useQ:Value()then Control.CastSpell(HK_Q)end end end end;function Nasus:CastQcombo(X)if X and Utils:IsValid(X,myHero.pos,Q.range+X.boundingRadius+myHero.boundingRadius)and myHero.attackData.state~=STATE_WINDUP then Control.CastSpell(HK_Q)Control.Attack(X)end end;function Nasus:CastWcombo(X)if X and Utils:IsValid(X,myHero.pos,W.range)and myHero.attackData.state~=STATE_WINDUP then Utils:CastSpell(HK_W,X.pos,W.range)end end;function Nasus:CastEcombo(X)if X and Utils:IsValid(X,myHero.pos,E.range+E.width)and myHero.attackData.state~=STATE_WINDUP then local bl=Utils:GetPred(X,X.ms)if bl then Utils:CastSpell(HK_E,bl,E.range)end end end;function Nasus:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Nasus:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Nasus:Clear()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)if b9 then for a4=1,t()do local bZ=u(a4)if bZ and not bZ.isAlly then if Utils:IsValid(bZ,myHero.pos,Q.range+myHero.boundingRadius+bZ.boundingRadius)then if self:GetQdmg(bZ)>bZ.health then Control.CastSpell(HK_Q)Control.Attack(bZ)break end end end end end end;function Nasus:GetStacks()if Utils:HasBuff(myHero,"nasusqstacks")then for a4=1,myHero.buffCount do local a5=myHero:GetBuff(a4)if a5 and a5.name:lower()=="nasusqstacks"then Stacks.count=a5.stacks;break end end end;Stacks.last=GetTickCount()end;function Nasus:GetQdmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;if bB>0 then local bh=({30,50,70,90,110})[bB]local br=Stacks.count;bf=myHero.totalDamage+bh+br end end;return Utils:CalculatePhysicalDamage(X,bf)end;function Nasus:UpdateRange()local Z=attackRange+175;if Utils:HasBuff(myHero,"nasusr")then Q.range=Z else Q.range=attackRange+25 end end;function Nasus:OnDraw()if Menu.Misc.drawLasthit:Value()then for a4=1,t()do local bZ=u(a4)if bZ and not bZ.isAlly then if Utils:IsValid(bZ,myHero.pos,1000)then if self:GetQdmg(bZ)>bZ.health then Draw.Circle(bZ.pos,50,3,Draw.Color(180,0,255,0))end end end end end end;class"Malphite"function Malphite:__init()if p~="Malphite"then return end;self:LoadSpells()self:LoadMenu()self.baseMoveSpeed=myHero.ms;Callback.Add("Tick",function()self:OnTick()end)end;function Malphite:LoadSpells()Q={range=625,delay=0.25}W={range=225}E={range=300}R={range=1000,width=400,delay=0.25,speed=1835}end;function Malphite:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="rSettings",name="R settings",type=MENU})Menu.Combo.rSettings:MenuElement({id="useRks",name="Use R to secure kills",value=true})Menu.Combo.rSettings:MenuElement({id="useRcombo",name="Use R Combo",value=true})Menu.Combo.rSettings:MenuElement({id="useRcount",name="Use R if enemy count > x",value=3,min=1,max=6,step=1})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function Malphite:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)self.rTarget=Utils:GetTarget(R.range+R.width)if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()end end end;function Malphite:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)then if myHero.attackData.state~=STATE_WINDUP then Utils:CastSpell(HK_Q,X.pos,Q.range)end end end;function Malphite:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)then Control.CastSpell(HK_W)end end;function Malphite:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)then if myHero.attackData.state~=STATE_WINDUP then Control.CastSpell(HK_E)end end end;function Malphite:CastRcombo()if#Utils:GetEnemyHeroesInRange(myHero.pos,R.range+R.width)>0 then for aV,aw in pairs(Utils:GetEnemyHeroesInRange(myHero.pos,R.range+R.width))do local target=aw;if Utils:IsValid(target,myHero.pos,R.range+R.width)then if Utils:GetDistance(myHero.pos,target.pos)<=R.range then if#Utils:GetEnemyHeroesInRange(target.pos,R.width)>=Menu.Combo.rSettings.useRcount:Value()then Utils:CastSpell(HK_R,target.pos,R.range,R.delay)return end end;if self:GetComboDmg(target)>target.health and Menu.Combo.rSettings.useRcombo:Value()or self:GetRdmg(target)>target.health and Menu.Combo.rSettings.useRks:Value()then Utils:CastSpell(HK_R,target.pos,R.range,R.delay)break end end end end end;function Malphite:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Utils:IsReady(_R)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end;if bA then self:CastRcombo()end end;function Malphite:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Malphite:GetComboDmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;local bu=myHero:GetSpellData(_E).level;if bB>0 then bf=bf+self:GetQdmg(X)end;if bu>0 then bf=bf+self:GetEdmg(X)end;if Utils:IsReady(_R)then bf=bf+self:GetRdmg(X)end end;return bf end;function Malphite:GetQdmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;if bB>0 then local bh=({70,120,170,220,270})[bB]local bz=myHero.ap*0.6;bf=bh+bz end end;return Utils:CalculateMagicalDamage(X,bf)end;function Malphite:GetEdmg(X)local bf=0;if X then local bu=myHero:GetSpellData(_E).level;if bu>0 then local bh=({60,95,130,165,200})[bu]local bz=myHero.ap*0.6;bf=bh+bz end end;return Utils:CalculateMagicalDamage(X,bf)end;function Malphite:GetRdmg(X)local bf=0;if X then local by=myHero:GetSpellData(_R).level;if by>0 then local bh=({200,300,400})[by]local bz=myHero.ap;bf=bh+bz end end;return Utils:CalculateMagicalDamage(X,bf*0.9)end;function Malphite:OnDraw()end;class"Rengar"function Rengar:__init()if p~="Rengar"then return end;self:LoadSpells()self:LoadMenu()self.lastSpell=GetTickCount()self.isUlting=false;Callback.Add("Tick",function()self:OnTick()end)end;function Rengar:LoadSpells()Q={range=725}W={range=450,width=myHero:GetSpellData(_W).width,speed=myHero:GetSpellData(_W).speed,delay=0.25}E={range=1000,width=myHero:GetSpellData(_E).width,speed=myHero:GetSpellData(_E).speed,delay=0.25,collision=Collision:SetSpell(1000,myHero:GetSpellData(_E).speed,0.25,100,true)}end;function Rengar:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Misc",name="Misc Settings",type=MENU})Menu.Combo:MenuElement({id="prio",name="Priority",drop={"Q","W","E"}})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useEcol",name="Ignore E collision",value=true})Menu.Combo:MenuElement({id="delay",name="Spell Delays",value=100,min=0,max=300,step=10,tooltip="increase if wrong skill gets empowered"})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})Menu.Misc:MenuElement({id="useWcc",name="Use W CC",value=true})end;function Rengar:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)if Utils:HasBuff(myHero,"rengarr")then self.isUlting=true else self.isUlting=false end;if Menu.Misc.useWcc:Value()then if Utils:IsImmobile(myHero)then if myHero.mana==4 then Control.CastSpell(HK_W)end end end;if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()end end end;function Rengar:OnPostAttack()if Utils:IsReady(_Q)then if#Utils:GetEnemyHeroesInRange(myHero.pos,Q.range+myHero.boundingRadius*2)>0 then local ca=Menu.Combo.prio:Value()if Menu.Combo.useQ:Value()and Orb.combo or Menu.Harass.useQ:Value()and Orb.harass then if myHero.mana<4 or ca==1 then Control.CastSpell(HK_Q)self.lastSpell=GetTickCount()end end end end end;function Rengar:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)then local cb=myHero.pathing;if cb.hasMovePath and cb.isDashing then Control.CastSpell(HK_Q)self.lastSpell=GetTickCount()end;if#Utils:GetEnemyHeroesInRange(myHero.pos,Q.range+myHero.boundingRadius*2)>0 then Control.CastSpell(HK_Q)self.lastSpell=GetTickCount()end end end;function Rengar:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)then local ca=Menu.Combo.prio:Value()if myHero.mana<4 or ca==2 then Control.CastSpell(HK_W)self.lastSpell=GetTickCount()end end end;function Rengar:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)then local ca=Menu.Combo.prio:Value()if myHero.mana<4 or ca==3 or X.health<self:GetComboDmg(X)then local a_,b0=HPred:GetReliableTarget(myHero.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,E.range,E.delay,E.speed,E.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<E.range then local b6,b7=E.collision:__GetCollision(myHero.pos,b4,5)if Menu.Combo.useEcol:Value()then Utils:CastSpell(HK_E,b4,E.range)else if not b6 then Utils:CastSpell(HK_E,b4,E.range)end end end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<E.range then local b6,b7=E.collision:__GetCollision(myHero.pos,b0,5)if Menu.Combo.useEcol:Value()then Utils:CastSpell(HK_E,b0,E.range)else if not b6 then Utils:CastSpell(HK_E,b0,E.range)end end end end;if b1 and b2 then if b1>=b5 or b1>=1 and X.health<self:GetComboDmg(X)then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<E.range then local b6,b7=E.collision:__GetCollision(myHero.pos,b2,5)if Menu.Combo.useEcol:Value()then Utils:CastSpell(HK_E,b2,E.range)else if not b6 then Utils:CastSpell(HK_E,b2,E.range)end end end end end end end end end;function Rengar:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local delay=Menu.Combo.delay:Value()local cc=(myHero.mana==3 or myHero.mana==4)and self.lastSpell+delay>GetTickCount()if b9 and self.qTarget and not cc then self:CastQcombo(self.qTarget)end;if ba and self.wTarget and not cc then self:CastWcombo(self.wTarget)end;if not self.isUlting then if eReady and self.eTarget and not cc then self:CastEcombo(self.eTarget)end end end;function Rengar:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)local cc=(myHero.mana==3 or myHero.mana==4)and self.lastSpell+delay>GetTickCount()if b9 and self.qTarget and not cc then self:CastQcombo(self.qTarget)end;if ba and self.wTarget and not cc then self:CastWcombo(self.wTarget)end;if not self.isUlting then if eReady and self.eTarget and not cc then self:CastEcombo(self.eTarget)end end end;function Rengar:GetComboDmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;local bg=myHero:GetSpellData(_W).level;local bu=myHero:GetSpellData(_E).level;local by=myHero:GetSpellData(_R).level;if bB>0 then bf=bf+self:GetQdmg(X)end;if bg>0 then bf=bf+self:GetWdmg(X)end;if bu>0 then bf=bf+self:GetEdmg(X)end;if by>0 and Utils:IsReady(_R)then bf=bf+myHero.totalDamage end end;return bf end;function Rengar:GetQdmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;if bB>0 then local bh=({30,60,90,120,150})[bB]local bz=myHero.ap*0.6;bf=bh+bz end end;return Utils:CalculatePhysicalDamage(X,bf)end;function Rengar:GetWdmg(X)local bf=0;if X then local bg=myHero:GetSpellData(_W).level;if bg>0 then local bh=({50,80,110,140,170})[bg]local cd=.8;local ce=myHero.ap*cd;bf=bh+ce end end;return Utils:CalculateMagicalDamage(X,bf)end;function Rengar:GetEdmg(X)local bf=0;if X then local bu=myHero:GetSpellData(_E).level;if bu>0 then local bh=({55,100,145,190,235})[bu]local bD=.8;local cf=myHero.bonusDamage*bD;bf=bh+cf end end;return Utils:CalculatePhysicalDamage(X,bf)end;class"Leblanc"function Leblanc:__init()if p~="Leblanc"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)end;function Leblanc:LoadSpells()Q={range=700,delay=.25}W={range=600,width=250,delay=.25,speed=1500}E={range=925,width=60,delay=.25,speed=1800,collision=Collision:SetSpell(925,1500,0.25,55,true)}R={range=925,width=60,delay=.25,speed=1800,collision=Collision:SetSpell(925,1500,0.25,55,true),name=myHero:GetSpellData(_R).name:lower()}end;function Leblanc:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})Menu.Harass:MenuElement({id="useR",name="Use R",value=true})end;function Leblanc:OnTick()self:UpdateRstate()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)self.rTarget=Utils:GetTarget(R.range)if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Leblanc:UpdateRstate()R.name=myHero:GetSpellData(_R).name:lower()if R.name=="leblancr"then R.range=0;R.width=0;R.speed=0 elseif R.name=="leblancrq"then R.range=Q.range elseif R.name=="leblancrw"then R.range=W.range;R.width=W.width;R.speed=W.speed elseif R.name=="leblancre"then R.range=E.range;R.width=E.width;R.speed=E.speed;R.collision=E.collision end end;function Leblanc:HasMark(X)return Utils:HasBuff(X,"leblancqmark")end;function Leblanc:HasChain(X)return Utils:HasBuff(X,"leblance")end;function Leblanc:CastQcombo(X,cg)if Utils:IsValid(X,myHero.pos,Q.range)then Control.CastSpell(cg,X)end end;function Leblanc:CastWcombo(X,cg)local ch=myHero:GetSpellData(_W).name:lower()if Utils:IsValid(X,myHero.pos,W.range)and myHero.attackData.state~=STATE_WINDUP and ch=="leblancw"then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<W.range then Utils:CastSpell(cg,b4,W.range,W.delay)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<W.range then Utils:CastSpell(cg,b0,W.range,W.delay)end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<W.range then Utils:CastSpell(cg,b2,W.range,W.delay)end end end end end end;function Leblanc:CastEcombo(X,cg)if Utils:IsValid(X,myHero.pos,E.range)and myHero.attackData.state~=STATE_WINDUP then if Utils:GetDistance(myHero.pos,X.pos)<myHero.boundingRadius*2 then return end;local a_,b0=HPred:GetReliableTarget(myHero.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,E.range,E.delay,E.speed,E.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<E.range then local b6,b7=E.collision:__GetCollision(myHero.pos,b4,5)if not b6 then Utils:CastSpell(cg,b4,E.range,E.delay)end end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<E.range then local b6,b7=E.collision:__GetCollision(myHero.pos,b0,5)if not b6 then Utils:CastSpell(cg,b0,E.range,E.delay)end end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<E.range then local b6,b7=E.collision:__GetCollision(myHero.pos,b2,5)if not b6 then Utils:CastSpell(cg,b2,E.range,E.delay)end end end end end end end;function Leblanc:CastRcombo(X)if R.name=="leblancrq"then self:CastQcombo(X,HK_R)elseif R.name=="leblancrw"and self:HasMark(X)then self:CastWcombo(X,HK_R)elseif R.name=="leblancre"and self:HasChain(X)or self:HasMark(X)then self:CastEcombo(X,HK_R)end end;function Leblanc:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if bA and self.rTarget then self:CastRcombo(self.rTarget)end;if b9 and self.qTarget then self:CastQcombo(self.qTarget,HK_Q)end;if ba and self.wTarget then self:CastWcombo(self.wTarget,HK_W)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget,HK_E)end end;function Leblanc:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)local bA=Menu.Harass.useR:Value()and Utils:IsReady(_R)if bA and self.rTarget then self:CastRcombo(self.rTarget)end;if b9 and self.qTarget then self:CastQcombo(self.qTarget,HK_Q)end;if ba and self.wTarget then self:CastWcombo(self.wTarget,HK_W)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget,HK_E)end end;class"Pyke"function Pyke:__init()if p~="Pyke"then return end;self:LoadSpells()self:LoadMenu()self.lastQ=0;self.chargingQ=false;self.qTime=0;self.lastR=0;Callback.Add("Tick",function()self:OnTick()end)end;function Pyke:LoadSpells()Q={range=400,minRange=400,maxRange=1025,delay=0.25,speed=2000,width=70,collision=Collision:SetSpell(400,2000,0.25,70,true)}W={range=900}E={range=525,delay=0.25,speed=1700,width=150}R={range=900,delay=0.25,speed=l,width=250}end;function Pyke:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Combo:MenuElement({id="rDelay",name="R reactivation delay",value=500,min=0,max=1000,step=50,tooltip="(ms)"})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=false})end;function Pyke:OnTick()self.qPullTarget=Utils:GetTarget(Q.maxRange)self.qTarget=Utils:GetTarget(Q.minRange)self.eTarget=Utils:GetTarget(E.range-myHero.boundingRadius*2)self.rTarget=Utils:GetTarget(R.range)self:UpdateQstate()if self.chargingQ then Orb:DisableAttacks(true)else Orb:DisableAttacks(false)end;if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()end end end;function Pyke:UpdateQstate()self.qTime=o()-self.lastQ;if self.chargingQ and self.qTime>0.5 then Q.range=400+140*(o()-(self.lastQ+0.5))*10;if Q.range>Q.maxRange then Q.range=Q.maxRange end end;Q.collision=Collision:SetSpell(Q.range,2000,0.25,70,true)local ci=Utils:HasBuff(myHero,"pykeq")or Utils:IsParticleInRange("pyke_base_q_channel",myHero.pos,myHero.boundingRadius)if ci and not self.chargingQ then self.chargingQ=true end;if self.chargingQ and not ci then self.chargingQ=false;Q.range=400;if Control.IsKeyDown(HK_Q)==true then Q.range=400;Control.KeyUp(HK_Q)end end;if Control.IsKeyDown(HK_Q)==true and not self.chargingQ then DelayAction(function()if Control.IsKeyDown(HK_Q)==true and not self.chargingQ then Control.KeyUp(HK_Q)end end,0.25)end;if Control.IsKeyDown(HK_Q)==true and not Utils:IsReady(_Q)then DelayAction(function()if Control.IsKeyDown(HK_Q)==true then Q.range=400;Control.KeyUp(HK_Q)end end,0.01)end end;function Pyke:CastQ(X)if Utils:IsValid(X,myHero.pos,Q.minRange)then if not self.chargingQ and self.qTime<0.5 then Utils:CastSpell(HK_Q,X.pos,Q.minRange)end end end;function Pyke:CastQstart(X)if Utils:IsValid(X,myHero.pos,Q.maxRange)then if not self.chargingQ then local b4=Utils:GetPred(X,Q.speed,Q.delay)if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<Q.maxRange then local b6,b7=Q.collision:__GetCollision(myHero.pos,b4,5)if not b6 then Control.KeyDown(HK_Q)self.lastQ=o()end end end end end;function Pyke:CastQcharged(X)local cj=self.qTime>0.75 and self.qTime<3;if Utils:IsValid(X,myHero.pos,Q.range)and self.chargingQ and cj then local a_,b0=HPred:GetReliableTarget(myHero.pos,Q.range,Q.delay,Q.speed,Q.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,Q.range,Q.delay,Q.speed,Q.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,Q.speed,Q.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b4,5)if not b6 then Utils:CastSpellCharged(HK_Q,b4,Q.range)end end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b0,5)if not b6 then Utils:CastSpellCharged(HK_Q,b0,Q.range)end end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b2,5)if not b6 then Utils:CastSpellCharged(HK_Q,b2,Q.range)end end end end end end end;function Pyke:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)then local a_,b0=HPred:GetReliableTarget(myHero.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,E.range,E.delay,E.speed,E.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<E.range then Utils:CastSpell(HK_E,b4,E.range)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<E.range then Utils:CastSpell(HK_E,b0,E.range)end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<E.range then Utils:CastSpell(HK_E,b2,E.range)end end end end end end;function Pyke:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range)then if self:GetRdmg(X)>X.health and o()-self.lastR>Menu.Combo.rDelay:Value()*0.001 then local b4=Utils:GetPred(X,R.speed,R.delay)if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<R.range then Utils:CastSpell(HK_R,b4,R.range)self.lastR=o()end end end end;function Pyke:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if b9 then if self.qPullTarget then if not self.chargingQ then self:CastQstart(self.qPullTarget)else self:CastQcharged(self.qPullTarget)end end;if self.qTarget and not self.chargingQ then self:CastQ(self.qTarget)end end;if eReady and self.eTarget and not self.chargingQ then self:CastEcombo(self.eTarget)end;if bA and self.rTarget and not self.chargingQ then self:CastRcombo(self.rTarget)end end;function Pyke:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if b9 then if self.qPullTarget then if not self.chargingQ then self:CastQstart(self.qPullTarget)else self:CastQcharged(self.qPullTarget)end end;if self.qTarget and not self.chargingQ then self:CastQ(self.qTarget)end end;if eReady and self.eTarget and not self.chargingQ then self:CastEcombo(self.eTarget)end end;function Pyke:GetRdmg(X)local bt=0;if myHero.levelData.lvl>=6 then local by=myHero.levelData.lvl-5;local bv=({190,240,290,340,390,440,475,510,545,580,615,635,655})[by]local c4=myHero.bonusDamage*0.6;bt=bv+c4 end;return bt-5 end;class"Kalista"function Kalista:__init()if p~="Kalista"then return end;self:LoadSpells()self:LoadMenu()self.lastAttack=GetTickCount()self.soulBound=nil;Callback.Add("Tick",function()self:OnTick()end)end;function Kalista:LoadSpells()Q={range=1150,delay=0.4,speed=1200,width=40,collision=Collision:SetSpell(1150,1200,0.25,40,true)}W={range=5000}E={range=1000}R={range=1000,speed=500}end;function Kalista:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Clear",name="Clear Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="eSettings",name="E settings",type=MENU})Menu.Combo.eSettings:MenuElement({id="kill",name="Use E to ks",value=true})Menu.Combo.eSettings:MenuElement({id="flee",name="Use E on fleeing target",value=true})Menu.Combo.eSettings:MenuElement({id="fleeHp",name="Fleeing Target Hp",value=20,min=0,max=100,step=1})Menu.Combo.eSettings:MenuElement({id="harass",name="Harass with minions",value=true})Menu.Combo:MenuElement({id="useR",name="Use R to save allies",value=true})Menu.Combo:MenuElement({id="useRhp",name="Ally Hp percent",value=10,min=0,max=100,step=1})Menu.Combo:MenuElement({id="jump",name="Attack minions to gapclose",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="eSettings",name="E settings",type=MENU})Menu.Harass.eSettings:MenuElement({id="kill",name="Use E to ks",value=true})Menu.Harass.eSettings:MenuElement({id="flee",name="Use E on fleeing target",value=true})Menu.Harass.eSettings:MenuElement({id="fleeHp",name="Fleeing Target Hp",value=20,min=0,max=100,step=1})Menu.Harass.eSettings:MenuElement({id="harass",name="Harass with minions",value=true})Menu.Harass:MenuElement({id="jump",name="Attack minions to gapclose",value=true})Menu.Clear:MenuElement({id="useE",name="Use E",value=true})end;function Kalista:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.eTarget=Utils:GetTarget(E.range)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if self.soulBound then if bA then self:CastRsave(self.soulBound,Menu.Combo.useRhp:Value())end else for a4=1,#Utils:GetAllyHeroesInRange(myHero.pos,R.range)do local aI=Utils:GetAllyHeroesInRange(myHero.pos,R.range)[a4]if aI and Utils:HasBuff(aI,"kalistacoopstrikeally")then self.soulBound=aI;break end end end;if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()elseif Orb.laneClear or Orb.jungleClear then self:Clear()end end end;function Kalista:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)and myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,Q.range,Q.delay,Q.speed,Q.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,Q.range,Q.delay,Q.speed,Q.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,Q.speed,Q.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b4,5)if not b6 then Utils:CastSpell(HK_Q,b4,Q.range,Q.delay)end end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b0,5)if not b6 then Utils:CastSpell(HK_Q,b0,Q.range,Q.delay)end end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b2,5)if not b6 then Utils:CastSpell(HK_Q,b2,Q.range,Q.delay)end end end end end end end;function Kalista:CastQeCombo(X)if#Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)>0 then for a4=1,#Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)do local bw=Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)[a4]if bw and Utils:IsValid(bw,myHero.pos,Q.range)and self:GetStacks(bw)>0 and self:GetQdmg(bw)>bw.health then local ck=myHero.pos;local cl=X.pos;local cm=bw.pos;for a4=X.boundingRadius,Q.range do local bV=ck:Extended(cm,a4)if Utils:GetDistance(X.pos,bV)<=Q.width then local b6,b7=Q.collision:__GetCollision(cm,cl,5)local cn,co=Q.collision:__GetCollision(ck,cm,5)if not b6 and not cn then Utils:CastSpell(HK_Q,bw.pos,Q.range)end end end end end end end;function Kalista:AttackMinion()if self.qTarget and myHero.attackData.state~=STATE_WINDUP then if Utils:IsValid(self.qTarget,myHero.pos,Q.range)and Utils:GetDistance(self.qTarget.pos,myHero.pos)>myHero.range then if#Utils:GetEnemyMinionsInRange(myHero.pos,myHero.range)>0 then for a4=1,#Utils:GetEnemyMinionsInRange(myHero.pos,myHero.range)do local bw=Utils:GetEnemyMinionsInRange(myHero.pos,myHero.range)[a4]if bw and Utils:IsValid(bw,myHero.pos,myHero.range)and GetTickCount()>self.lastAttack+100 then Control.Attack(bw)self.lastAttack=GetTickCount()end end end end end end;function Kalista:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local eReady=Utils:IsReady(_E)local cp=Menu.Combo.jump:Value()if cp then if self.qTarget and myHero.attackData.state~=STATE_WINDUP then self:AttackMinion()if b9 then self:CastQcombo(self.qTarget)end end end;if eReady then if self.eTarget then if Menu.Combo.eSettings.kill:Value()then if self:GetEdmg(self.eTarget)>self.eTarget.health then Control.CastSpell(HK_E)end end;if Menu.Combo.eSettings.flee:Value()then self:CastEflee(self.eTarget,Menu.Combo.eSettings.fleeHp:Value())end end;if Menu.Combo.eSettings.harass:Value()then self:MinionHarass()end end;if b9 and eReady and self.eTarget then self:CastQeCombo(self.eTarget)end end;function Kalista:CastEflee(X,cq)if Utils:IsValid(X,myHero.pos,E.range)and Utils:GetHpPercent(X)<=cq and self:GetStacks(X)>0 then local bl=X:GetPrediction(X.ms,.25)if bl:To2D().onScreen and Utils:GetDistance(bl,myHero.pos)>E.range then Control.CastSpell(HK_E)end end end;function Kalista:CastRsave(aI,cq)if not aI then return end;if Utils:IsValid(aI,myHero.pos,E.range)and Utils:GetHpPercent(aI)<=cq then Control.CastSpell(HK_R)end end;function Kalista:MinionHarass()if#Utils:GetEnemyMinionsInRange(myHero.pos,E.range)>0 and#Utils:GetEnemyHeroesInRange(myHero.pos,E.range)>0 then for a4=1,#Utils:GetEnemyMinionsInRange(myHero.pos,E.range)do local bw=Utils:GetEnemyMinionsInRange(myHero.pos,E.range)[a4]if bw and self:GetStacks(bw)>0 and self:GetEdmg(bw)*0.5>bw.health then Control.CastSpell(HK_E)end end end end;function Kalista:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local eReady=Utils:IsReady(_E)local cp=Menu.Harass.jump:Value()if cp then if self.qTarget and myHero.attackData.state~=STATE_WINDUP then self:AttackMinion()if b9 then self:CastQcombo(self.qTarget)end end end;if eReady then if self.eTarget then if Menu.Harass.eSettings.kill:Value()then if self:GetEdmg(self.eTarget)>self.eTarget.health then Control.CastSpell(HK_E)end end;if Menu.Harass.eSettings.flee:Value()then self:CastEflee(self.eTarget,Menu.Harass.eSettings.fleeHp:Value())end end;if Menu.Harass.eSettings.harass:Value()then self:MinionHarass()end end;if b9 and eReady and self.eTarget then self:CastQeCombo(self.eTarget)end end;function Kalista:Clear()local eReady=Menu.Clear.useE:Value()and Utils:IsReady(_E)if eReady then if#Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)>0 then for a4=1,#Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)do local bw=Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)[a4]if bw and Utils:IsValid(bw,myHero.pos,Q.range)and self:GetStacks(bw)>0 and self:GetQdmg(bw)*0.5>bw.health then Control.CastSpell(HK_E)end end end end end;function Kalista:GetStacks(X)local br=0;for a4=1,X.buffCount do local a5=X:GetBuff(a4)if a5 and a5.count>0 and a5.name:lower()=="kalistaexpungemarker"then br=a5.count end end;return br end;function Kalista:GetQdmg(X)if not X then return 0 end;local bt=0;local bB=myHero:GetSpellData(_Q).level;if bB>0 then local bv=({10,70,130,190,250})[bB]local bx=myHero.totalDamage;bt=bv+bx end;return Utils:CalculatePhysicalDamage(X,bt)end;function Kalista:GetEdmg(X)if not X then return 0 end;local bt=0;local bu=myHero:GetSpellData(_E).level;if bu>0 then local bv=({10,14,19,25,32})[bu]local bw=({.2,.225,.25,.275,.3})[bu]local bx=bw*myHero.totalDamage;bt=(bv+bx)*self:GetStacks(X)end;return Utils:CalculatePhysicalDamage(X,bt)end;class"Aatrox"function Aatrox:__init()if p~="Aatrox"then return end;self:LoadSpells()self:LoadMenu()self.qState=1;self.lastQ=GetTickCount()Callback.Add("Tick",function()self:OnTick()end)end;function Aatrox:LoadSpells()Q={range=650,delay=0.25}W={range=825,width=80,speed=500,delay=0.25,collision=Collision:SetSpell(825,500,0.25,80,true)}E={range=300}R={}end;function Aatrox:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useRhp",name="HP to use R",value=40,min=0,max=100,step=1,tooltip="set to 0 to disable"})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function Aatrox:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(Q.range+E.range)local cr=myHero:GetSpellData(_Q).name:lower()if Utils:GetHpPercent(myHero)<=Menu.Combo.useRhp:Value()and#Utils:GetEnemyHeroesInRange(myHero.pos,800)>0 then if Utils:IsReady(_R)then Control.CastSpell(HK_R)end end;if myHero.activeSpell.valid and myHero.activeSpellSlot==0 then self.lastQ=GetTickCount()end;if cr=="aatroxq"then self.qState=1 elseif cr=="aatroxq2"then self.qState=2 else self.qState=3 end;if self.qState==1 then Q.range=650 elseif self.qState==2 then Q.range=525 else Q.range=500 end;if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Aatrox:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)and not(myHero.activeSpell.valid or myHero.pathing.isDashing)then if myHero.attackData.state~=STATE_WINDUP then Utils:CastSpell(HK_Q,X.pos,Q.range,Q.delay)end end end;function Aatrox:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)and myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<W.range then local b6,b7=W.collision:__GetCollision(myHero.pos,b4,5)if not b6 then Utils:CastSpell(HK_W,b4,W.range,W.delay)end end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<W.range then local b6,b7=W.collision:__GetCollision(myHero.pos,b0,5)if not b6 then Utils:CastSpell(HK_W,b0,W.range,W.delay)end end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<W.range then local b6,b7=W.collision:__GetCollision(myHero.pos,b2,5)if not b6 then Utils:CastSpell(HK_W,b2,W.range,W.delay)end end end end end end end;function Aatrox:CastEcombo(X)if myHero.attackData.state~=STATE_WINDUP and self.lastQ+500<GetTickCount()and not myHero.activeSpell.isChanneling then if Utils:IsValid(X,myHero.pos,E.range+Q.range)then local cs=X.pos:Extended(myHero.pos,Utils:GetDistance(myHero.pos,X.pos)+300)if self.qState==1 and Utils:IsReady(_Q)or self.qState==2 then if Utils:GetDistance(myHero.pos,X.pos)>Q.range then Utils:CastSpell(HK_E,X.pos,E.range)else if Utils:GetDistance(myHero.pos,X.pos)<Q.range*.75 then Utils:CastSpell(HK_E,cs,E.range)end end else if Utils:GetDistance(myHero.pos,X.pos)>Q.range*.5 then Utils:CastSpell(HK_E,X.pos,E.range)end end end end end;function Aatrox:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Aatrox:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;class"Corki"function Corki:__init()if p~="Corki"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)Callback.Add("Draw",function()self:OnDraw()end)end;function Corki:LoadSpells()Q={range=825,width=250,speed=1200,delay=0.25}W={range=600,width=160,speed=700,delay=0.25}E={range=600,speed=902,delay=0.25}R={range=1225,width=40,speed=1650,delay=0.25,collision=Collision:SetSpell(1225,1650,0.25,40,true)}end;function Corki:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Misc",name="Misc Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})Menu.Harass:MenuElement({id="useR",name="Use R",value=true})Menu.Harass:MenuElement({id="rCount",name="Keep X Stacks",value=3,min=0,max=7,step=1})Menu.Misc:MenuElement({id="drawMis",name="Draw Missile Count",value=true})Menu.Misc:MenuElement({id="drawBig",name="Draw Big One",value=true})end;function Corki:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)self.rTarget=Utils:GetTarget(R.range)if Orb.combo and not I then self:Combo()elseif Orb.harass and not I then self:Harass()end end;function Corki:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)and myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,Q.range,Q.delay,Q.speed,Q.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,Q.range,Q.delay,Q.speed,Q.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,Q.speed,Q.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<Q.range then Utils:CastSpell(HK_Q,b4,Q.range)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<Q.range then Utils:CastSpell(HK_Q,b0,Q.range)end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<Q.range then Utils:CastSpell(HK_Q,b2,Q.range)end end end end end end;function Corki:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range*0.5)then if myHero.attackData.state~=STATE_WINDUP then Utils:CastSpell(HK_W,myHero.pos:Extended(X.pos,W.range),W.range)end end end;function Corki:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)then if myHero.attackData.state~=STATE_WINDUP then Control.CastSpell(HK_E)end end end;function Corki:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range)and myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,R.range,R.delay,R.speed,R.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,R.range,R.delay,R.speed,R.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,R.speed,R.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<R.range then local b6,b7=R.collision:__GetCollision(myHero.pos,b4,5)if not b6 then Utils:CastSpell(HK_R,b4,R.range,R.delay)end end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<R.range then local b6,b7=R.collision:__GetCollision(myHero.pos,b0,5)if not b6 then Utils:CastSpell(HK_R,b0,R.range,R.delay)end end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<R.range then local b6,b7=R.collision:__GetCollision(myHero.pos,b2,5)if not b6 then Utils:CastSpell(HK_R,b2,R.range,R.delay)end end end end end end end;function Corki:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end;if bA and self.rTarget then self:CastRcombo(self.rTarget)end end;function Corki:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)local bA=Menu.Harass.useR:Value()and Utils:IsReady(_R)local ct=Menu.Harass.rCount:Value()local cu=myHero:GetSpellData(_R).ammo;if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end;if bA and self.rTarget then if cu>ct then self:CastRcombo(self.rTarget)end end end;function Corki:OnDraw()local bc=myHero.pos:To2D()if Menu.Misc.drawMis:Value()then Draw.Text(myHero:GetSpellData(_R).ammo,18,bc.x-20,bc.y+40,Draw.Color(255,255,0,0))end;if Menu.Misc.drawBig:Value()then if Utils:HasBuff(myHero,"mbcheck2")then Draw.Text("Big One!",12,bc.x-20,bc.y+60,Draw.Color(255,255,0,0))end end end;class"Evelynn"function Evelynn:__init()if p~="Evelynn"then return end;self:LoadSpells()self:LoadMenu()self.isQ1=true;Callback.Add("Tick",function()self:OnTick()end)end;function Evelynn:LoadSpells()Q={range=800,width=myHero:GetSpellData(_Q).width,speed=myHero:GetSpellData(_Q).speed,delay=0.25,collision=Collision:SetSpell(800,myHero:GetSpellData(_Q).speed,0.25,myHero:GetSpellData(_Q).width*1.5,true)}W={range=1200,width=myHero:GetSpellData(_W).width,speed=myHero:GetSpellData(_W).speed,delay=0.25}E={range=300,width=300,speed=myHero:GetSpellData(_E).speed,delay=0.25}R={range=450,width=myHero:GetSpellData(_R).width,speed=myHero:GetSpellData(_R).speed,delay=0.25}end;function Evelynn:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Clear",name="Clear Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})Menu.Clear:MenuElement({id="useQ",name="Use Q",value=true})end;function Evelynn:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)self.rTarget=Utils:GetTarget(R.range)self.isQ1=myHero:GetSpellData(_Q).name=="EvelynnQ"self:UpdateWrange()if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()elseif Orb.laneClear or Orb.jungleClear then self:Clear()end end end;function Evelynn:HasWmark(X)for a4=1,D()do local a7=F(a4)if a7 then if Utils:GetDistance(a7.pos,X.pos)<=200 then local b_=a7.name:lower()if b_=="evelynn_base_w_fizz_mark_decay"then return true end end end end;return false end;function Evelynn:HasRmark(X)for a4=1,D()do local a7=F(a4)if a7 then if Utils:GetDistance(a7.pos,X.pos)<=200 then local b_=a7.name:lower()if b_=="evelynn_base_r_crit_indicator"then return true end end end end;return false end;function Evelynn:UpdateWrange()local bg=myHero:GetSpellData(_W).level;local Z=1200;if bg>0 then Z=({1200,1300,1400,1500,1600})[bg]W.range=Z end end;function Evelynn:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)and myHero.attackData.state~=STATE_WINDUP then if self.isQ1 then local a_,b0=HPred:GetReliableTarget(myHero.pos,Q.range,Q.delay,Q.speed,Q.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,Q.range,Q.delay,Q.speed,Q.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,Q.speed,Q.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b4,5)if not b6 then Utils:CastSpell(HK_Q,b4,Q.range,Q.delay)end end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b0,5)if not b6 then Utils:CastSpell(HK_Q,b0,Q.range,Q.delay)end end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b2,5)if not b6 then Utils:CastSpell(HK_Q,b2,Q.range,Q.delay)end end end end end else Control.CastSpell(HK_Q)end end end;function Evelynn:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)and myHero.attackData.state~=STATE_WINDUP then if X.pos:To2D().onScreen then Utils:CastSpell(HK_W,X.pos,W.range)end end end;function Evelynn:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)and myHero.attackData.state~=STATE_WINDUP then if X.pos:To2D().onScreen then Utils:CastSpell(HK_E,X.pos,E.range)end end end;function Evelynn:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range)and myHero.attackData.state~=STATE_WINDUP then if X.pos:To2D().onScreen and self:GetRdmg(X)>X.health then Utils:CastSpell(HK_R,X.pos,R.range)end end end;function Evelynn:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end;if bA and self.rTarget then self:CastRcombo(self.rTarget)end end;function Evelynn:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Evelynn:Clear()local b9=Menu.Clear.useQ:Value()and Utils:IsReady(_Q)if b9 then for a4=1,t()do local bw=u(a4)if bw and Utils:IsValid(bw,myHero.pos,Q.range)then if Utils:GetDistance(bw.pos,myHero.pos)<=Q.range then Utils:CastSpell(HK_Q,bw.pos,Q.range)end end end end end;function Evelynn:GetRdmg(X)local bt=0;local by=myHero:GetSpellData(_R).level;if by>0 then local bv=({150,275,400})[by]local bz=myHero.ap*.75;if self:HasRmark(X)then bt=bv*2+bz*2 else bt=bv+bz end end;return Utils:CalculateMagicalDamage(X,bt)end;class"Irelia"function Irelia:__init()if p~="Irelia"then return end;self:LoadSpells()self:LoadMenu()self.lastE=GetTickCount()self.lastBuff=GetTickCount()self.chargingW=false;self.wTime=GetTickCount()self.lastW=GetTickCount()Callback.Add("Tick",function()self:OnTick()end)end;function Irelia:LoadSpells()Q={range=625,delay=0.25}W={range=600,delay=0.25,width=100,speed=l}E={range=925,delay=0.25,width=50,speed=1800}R={range=1050,delay=0.25,width=160,speed=2000}end;function Irelia:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Clear",name="Clear Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useQj",name="Use Q gapclose",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=false})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})Menu.Clear:MenuElement({id="useQ",name="Use Q",value=true})end;function Irelia:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)self.rTarget=Utils:GetTarget(R.range)self.gCtarget=Utils:GetTarget(1200)self.eName=myHero:GetSpellData(_E).name;self:UpdateWstate()self:DisableOrb()if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()elseif Orb.jungleClear or Orb.laneClear then self:Clear()end end end;function Irelia:DisableOrb()local cv=Utils:HasBuff(myHero,"ireliawdefense")if cv then Orb:DisableMovement(true)Orb:DisableAttacks(true)else Orb:DisableMovement(false)Orb:DisableAttacks(false)end end;function Irelia:HasMark(X)if self.lastBuff+100<=GetTickCount()then for a4=1,X.buffCount do local a5=X:GetBuff(a4)if a5 and a5.count>0 and a5.name=="ireliamark"then self.lastBuff=GetTickCount()return true end end;self.lastBuff=GetTickCount()return false end end;function Irelia:GetE1()if self.lastE+100<=GetTickCount()then for a4=1,z()do local cw=A(a4)if cw then if cw.name=="Irelia_Base_E_Team_Indicator"then self.lastE=GetTickCount()return cw end end end;self.lastE=GetTickCount()end end;function Irelia:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)and myHero.attackData.state~=STATE_WINDUP then if self:HasMark(X)or self:GetQdmg(X)>X.health then Utils:CastSpell(HK_Q,X.pos,Q.range)end end end;function Irelia:CastWcombo()for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,W.range*.9)do local aW=Utils:GetEnemyHeroesInRange(myHero.pos,W.range*.9)[a4]if aW then if aW.activeSpell and aW.activeSpell.valid and(aW.activeSpell.target==myHero.handle or Utils:GetDistance(aW.activeSpell.placementPos,myHero.pos)<=myHero.boundingRadius*2+aW.activeSpell.width)then local bR=aW.activeSpell.startPos;local bS=aW.activeSpell.placementPos;local be=0;if aW.activeSpell.width>0 then be=aW.activeSpell.width else be=100 end;local bG=Utils:GetDistance(myHero.pos,bS)if aW.activeSpell.target==myHero.handle then if not self.chargingW then self:CastWstart(aW)else self:CastWcharged(aW)end;return else if bG<=be*2+myHero.boundingRadius then if not self.chargingW then self:CastWstart(aW)else self:CastWcharged(aW)end;break end end end end end end;function Irelia:CastWstart(X)if Utils:IsValid(X,myHero.pos,W.range)and myHero:GetSpellData(_E).name~="IreliaE2"then if not self.chargingW then local b4=Utils:GetPred(X,W.speed,W.delay)if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<=W.range then Control.KeyDown(HK_W)self.lastW=GetTickCount()end end end end;function Irelia:CastWcharged(X)if Utils:IsValid(X,myHero.pos,W.range)and GetTickCount()>self.lastW+1000 and GetTickCount()<self.lastW+1750 then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<=W.range then Control.SetCursorPos(b4)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<=W.range then Control.SetCursorPos(b0)end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<=W.range then Control.SetCursorPos(b2)end end end end end end;function Irelia:UpdateWstate()self.wTime=GetTickCount()-self.lastW;local cv=Utils:HasBuff(myHero,"ireliawdefense")if cv and not self.chargingW then self.chargingW=true end;if self.chargingW and not cv then DelayAction(function()if self.chargingW and not cv then self.chargingW=false end end,0.25)end;if Control.IsKeyDown(HK_W)==true and not self.chargingW then DelayAction(function()if Control.IsKeyDown(HK_W)==true and not self.chargingW then Control.KeyUp(HK_W)end end,0.25)end;if Control.IsKeyDown(HK_W)==true and#Utils:GetEnemyHeroesInRange(myHero.pos,W.range*.9)==0 then DelayAction(function()if Control.IsKeyDown(HK_W)==true and#Utils:GetEnemyHeroesInRange(myHero.pos,W.range*.9)==0 then Control.KeyUp(HK_W)end end,0.25)end end;function Irelia:CastE1combo(X)if Utils:IsValid(X,myHero.pos,E.range)and myHero:GetSpellData(_E).name=="IreliaE"then local a_,b0=HPred:GetReliableTarget(myHero.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,E.range,E.delay,E.speed,E.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()local cx=E.range*0.33;if b3 then if b4 then local cy=myHero.pos:Extended(b4,cx+Utils:GetDistance(b4,myHero.pos))if cy:To2D().onScreen and Utils:GetDistance(cy,myHero.pos)<=E.range then Utils:CastSpell(HK_E,cy,E.range,E.delay)end end else if a_ and b0 and a_.networkID==X.networkID then local cy=myHero.pos:Extended(b0,cx+Utils:GetDistance(b0,myHero.pos))if cy:To2D().onScreen and Utils:GetDistance(cy,myHero.pos)<=E.range then Utils:CastSpell(HK_E,cy,E.range,E.delay)end end;if b1 and b2 then if b1>=b5 then local cy=myHero.pos:Extended(b2,cx+Utils:GetDistance(b2,myHero.pos))if cy:To2D().onScreen and Utils:GetDistance(cy,myHero.pos)<=E.range then Utils:CastSpell(HK_E,cy,E.range,E.delay)end end end end end end;function Irelia:CastE2combo(X)if Utils:IsValid(X,myHero.pos,E.range)and myHero:GetSpellData(_E).name=="IreliaE2"then local cz=self:GetE1()if cz then local a_,b0=HPred:GetReliableTarget(cz.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(cz.pos,X,E.range,E.delay,E.speed,E.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay,cz.pos)local b5=Menu.AiO.Pred.HPred.accuracy:Value()local cA=cz.pos;local cB=cz.pos:To2D()local cl=X.pos;local cx=E.range*0.33;if b3 then if b4 then local cy=cA:Extended(b4,Utils:GetDistance(cA,cl)+cx)if cy:To2D().onScreen and Utils:GetDistance(cy,myHero.pos)<=E.range then Utils:CastSpell(HK_E,cy,E.range)end end else if a_ and b0 and a_.networkID==X.networkID then local cy=cA:Extended(b0,Utils:GetDistance(cA,cl)+cx)if cy:To2D().onScreen and Utils:GetDistance(cy,myHero.pos)<=E.range then Utils:CastSpell(HK_E,cy,E.range,E.delay)end end;if b1 and b2 then local cy=cA:Extended(b2,Utils:GetDistance(cA,cl)+cx)if b1>=b5 then if cy:To2D().onScreen and Utils:GetDistance(cy,myHero.pos)<E.range then Utils:CastSpell(HK_E,cy,E.range,E.delay)end end end end end end end;function Irelia:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range)and self:GetComboDmg(X)>X.health and X.health>self:GetQdmg(X)then local a_,b0=HPred:GetReliableTarget(myHero.pos,R.range,R.delay,R.speed,R.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,R.range,R.delay,R.speed,R.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,R.speed,R.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<=R.range then Utils:CastSpell(HK_R,b4,R.range,R.delay)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<=R.range then Utils:CastSpell(HK_R,b0,R.range,R.delay)end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<=R.range then Utils:CastSpell(HK_R,b2,R.range,R.delay)end end end end end end;function Irelia:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local cC=Menu.Combo.useQj:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)local cD=myHero:GetSpellData(_E).name;if b9 then if self.qTarget then self:CastQcombo(self.qTarget)end;if cC and self.gCtarget then if#Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)>0 then for a4=1,#Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)do local bT=Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)[a4]if bT then local cm=bT.pos;if b9 then if Utils:IsValid(bT,myHero.pos,Q.range)and Utils:GetDistance(cm,self.gCtarget.pos)<Utils:GetDistance(myHero.pos,self.gCtarget.pos)then if bT.health<self:GetQdmg(bT)*1.7 then Control.CastSpell(HK_Q,bT)end end end end end end end end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then if cD=="IreliaE"then self:CastE1combo(self.eTarget)else self:CastE2combo(self.eTarget)end end;if bA and self.rTarget then self:CastRcombo(self.rTarget)end end;function Irelia:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)local cD=myHero:GetSpellData(_E).name;if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then if cD=="IreliaE"then self:CastE1combo(self.eTarget)else self:CastE2combo(self.eTarget)end end end;function Irelia:Clear()local b9=Menu.Clear.useQ:Value()and Utils:IsReady(_Q)if b9 then if#Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)>0 then for a4=1,#Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)do local bT=Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)[a4]if bT then local cm=bT.pos;if Utils:GetDistance(cm,mousePos)<200 then if bT.health<self:GetQdmg(bT)*1.7 then Control.CastSpell(HK_Q,bT)end end end end end end end;function Irelia:GetQdmg(X)if not X then return 0 end;local bt=0;local bB=myHero:GetSpellData(_Q).level;if bB>0 then local bv=({10,30,50,70,90})[bB]local bx=myHero.totalDamage*.7;bt=bv+bx end;return Utils:CalculatePhysicalDamage(X,bt)end;function Irelia:GetEdmg(X)if not X then return 0 end;local bt=0;local bu=myHero:GetSpellData(_E).level;if bu>0 then local bv=({80,120,160,200,240})[bu]local bx=myHero.ap*.8;bt=bv+bx end;return Utils:CalculateMagicalDamage(X,bt)end;function Irelia:GetRdmg(X)if not X then return 0 end;local bt=0;local by=myHero:GetSpellData(_R).level;if by>0 then local cE=({125,225,325})[by]local cF=({75,125,175})[by]local bx=myHero.ap*.7;bt=cE+cF+bx*2 end;return Utils:CalculatePhysicalDamage(X,bt)end;function Irelia:GetComboDmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;local bu=myHero:GetSpellData(_E).level;local by=myHero:GetSpellData(_R).level;if bB>0 then bf=bf+self:GetQdmg(X)end;if bu>0 and Utils:IsReady(_E)then bf=bf+self:GetEdmg(X)+self:GetQdmg(X)end;if by>0 and Utils:IsReady(_R)then bf=bf+self:GetRdmg(X)+self:GetQdmg(X)end end;return bf end;class"Ezreal"function Ezreal:__init()if p~="Ezreal"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)end;function Ezreal:LoadSpells()Q={range=1150,width=80,delay=.25,speed=2000,collision=Collision:SetSpell(1150,2000,0.25,80,true),name=myHero:GetSpellData(_Q).name:lower()}W={range=1000,width=80,delay=.25,speed=1550,name=myHero:GetSpellData(_W).name:lower()}E={}R={range=25000,width=160,delay=1,speed=2000,collision=Collision:SetSpell(25000,2000,1,160,true),name=myHero:GetSpellData(_R).name:lower()}end;function Ezreal:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="Clear",name="Clear Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Combo:MenuElement({id="maxRrange",name="Max R Range",value=5000,min=0,max=25000,step=100})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Clear:MenuElement({id="useQ",name="Use Q",value=true})end;function Ezreal:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.wTarget=Utils:GetTarget(W.range)self.rTarget=Utils:GetTarget(R.range)if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()elseif Orb.laneClear or Orb.jungleClear then self:Clear()end end end;function Ezreal:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)and myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,Q.range,Q.delay,Q.speed,Q.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,Q.range,Q.delay,Q.speed,Q.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,Q.speed,Q.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b4,5)if not b6 then Utils:CastSpell(HK_Q,b4,Q.range,Q.delay)end end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b0,5)if not b6 then Utils:CastSpell(HK_Q,b0,Q.range,Q.delay)end end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b2,5)if not b6 then Utils:CastSpell(HK_Q,b2,Q.range,Q.delay)end end end end end end end;function Ezreal:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)and myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<W.range then Utils:CastSpell(HK_W,b4,W.range,W.delay)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<W.range then Utils:CastSpell(HK_W,b0,W.range,W.delay)end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<W.range then Utils:CastSpell(HK_W,b2,W.range,W.delay)end end end end end end;function Ezreal:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range)and myHero.attackData.state~=STATE_WINDUP then if Utils:GetDistance(X.pos,myHero.pos)>myHero.range then local a_,b0=HPred:GetReliableTarget(myHero.pos,R.range,R.delay,R.speed,R.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,R.range,R.delay,R.speed,R.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,R.speed,R.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if Utils:GetDistance(b4,myHero.pos)<R.range then if b4:To2D().onScreen then Utils:CastSpell(HK_R,b4,R.range,R.delay)else Utils:CastSpellMM(HK_R,b4,R.range,R.delay)end end end else if a_ and b0 and a_.networkID==X.networkID then if Utils:GetDistance(b0,myHero.pos)<R.range then if b0:To2D().onScreen then Utils:CastSpell(HK_R,b0,R.range,R.delay)else Utils:CastSpellMM(HK_R,b0,R.range,R.delay)end end end;if b1 and b2 then if b1>=b5 then if Utils:GetDistance(b2,myHero.pos)<R.range then if b2:To2D().onScreen then Utils:CastSpell(HK_R,b2,R.range,R.delay)else Utils:CastSpellMM(HK_R,b2,R.range,R.delay)end end end end end end end end;function Ezreal:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if bA and self.rTarget then if Utils:GetDistance(myHero.pos,self.rTarget.pos)<=Menu.Combo.maxRrange:Value()then if self:GetRdmg(self.rTarget)>self.rTarget.health then self:CastRcombo(self.rTarget)end end end end;function Ezreal:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if ba and self.wTarget then self:CastWcombo(self.wTarget)end end;function Ezreal:Clear()local b9=Menu.Clear.useQ:Value()and Utils:IsReady(_Q)if b9 then for a4=1,#Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)do local bw=Utils:GetEnemyMinionsInRange(myHero.pos,Q.range)[a4]if bw and Utils:IsValid(bw,myHero.pos,Q.range)and self:GetQdmg(bw)>bw.health then local b6,b7=Q.collision:__GetCollision(myHero.pos,bw,5)if b6 then if#b7==1 then Utils:CastSpell(HK_Q,bw.pos,Q.range)end end end end end end;function Ezreal:GetQdmg(X)local bf=0;if X then local bB=myHero:GetSpellData(_Q).level;local bh=({15,40,65,90,115})[bB]local bE=myHero.totalDamage*1.1;local bz=myHero.ap*.4;if bB>0 then bf=bh+bE+bz end end;return Utils:CalculatePhysicalDamage(X,bf)*.9 end;function Ezreal:GetRdmg(X)local bf=0;if X then local by=myHero:GetSpellData(_R).level;local bh=({350,500,650})[by]local bE=myHero.bonusDamage;local bz=myHero.ap*.9;if by>0 then local b6,b7=R.collision:__GetCollision(myHero.pos,X.pos,5)bf=bh+bE+bz;if b6 then local cG=#b7;if cG>7 then cG=7 end;bf=bf-bf*.1*cG end end end;return Utils:CalculateMagicalDamage(X,bf)*.9 end;class"Rumble"function Rumble:__init()if p~="Rumble"then return end;Callback.Add("Tick",function()self:OnTick()end)end;function Rumble:OnTick()if Orb.combo then self:Combo()end end;function Rumble:Combo()if Utils:IsReady(_Q)then Control.CastSpell(HK_Q)end;if Utils:IsReady(_W)then Control.CastSpell(HK_W)end end;class"Lux"function Lux:__init()if p~="Lux"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)end;function Lux:LoadSpells()Q={range=1175,width=50,delay=.25,speed=1200,collision=Collision:SetSpell(1175,1200,0.25,50,true),name=myHero:GetSpellData(_Q).name:lower()}W={range=1075,width=80,delay=.25,speed=1400,name=myHero:GetSpellData(_W).name:lower()}E={range=1000,width=310,delay=.5,speed=1200,name=myHero:GetSpellData(_E).name:lower()}R={range=3340,width=120,delay=1,speed=l,name=myHero:GetSpellData(_R).name:lower()}end;function Lux:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useQ",name="Use Q",value=true})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Harass:MenuElement({id="useQ",name="Use Q",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function Lux:OnTick()self.qTarget=Utils:GetTarget(Q.range)self.eTarget=Utils:GetTarget(E.range+E.width*.5)self.rTarget=Utils:GetTarget(R.range)if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()end end end;function Lux:CastQcombo(X)if Utils:IsValid(X,myHero.pos,Q.range)and myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,Q.range,Q.delay,Q.speed,Q.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,Q.range,Q.delay,Q.speed,Q.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,Q.speed,Q.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b4,5)if b6 then if#b7<=1 then Utils:CastSpell(HK_Q,b4,Q.range,Q.delay)end else Utils:CastSpell(HK_Q,b4,Q.range,Q.delay)end end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b0,5)if b6 then if#b7<=1 then Utils:CastSpell(HK_Q,b0,Q.range,Q.delay)end else Utils:CastSpell(HK_Q,b0,Q.range,Q.delay)end end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<Q.range then local b6,b7=Q.collision:__GetCollision(myHero.pos,b2,5)if b6 then if#b7<=1 then Utils:CastSpell(HK_Q,b2,Q.range,Q.delay)end else Utils:CastSpell(HK_Q,b2,Q.range,Q.delay)end end end end end end end;function Lux:CastWcombo(X)end;function Lux:CastEcombo(X)if myHero:GetSpellData(_E).name:lower()=="luxlightstrikekugel"then if Utils:IsValid(X,myHero.pos,E.range)and myHero.attackData.state~=STATE_WINDUP then local a_,b0=HPred:GetReliableTarget(myHero.pos,E.range,E.delay,E.speed,E.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,E.range,E.delay,E.speed,E.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,E.speed,E.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<E.range then Utils:CastSpell(HK_E,b4,E.range,E.delay)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<E.range then Utils:CastSpell(HK_E,b0,E.range,E.delay)end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<E.range then Utils:CastSpell(HK_E,b2,E.range,E.delay)end end end end end else Control.CastSpell(HK_E)end end;function Lux:CastRcombo(X)if Utils:IsValid(X,myHero.pos,R.range)and myHero.attackData.state~=STATE_WINDUP then local cH=0;if Utils:HasBuff(X,"luxilluminatingfraulein")then cH=cH+self:GetPassiveDmg(X)+self:GetRdmg(X)else cH=self:GetRdmg(X)end;if self:GetRdmg(X)>X.health and Utils:GetDistance(myHero.pos,X.pos)>=myHero.range then local a_,b0=HPred:GetReliableTarget(myHero.pos,R.range,R.delay,R.speed,R.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,R.range,R.delay,R.speed,R.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,R.speed,R.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if Utils:GetDistance(b4,myHero.pos)<R.range then if b4:To2D().onScreen then Utils:CastSpell(HK_R,b4,R.range,R.delay)else Utils:CastSpellMM(HK_R,b4,R.range,R.delay)end end end else if a_ and b0 and a_.networkID==X.networkID then if Utils:GetDistance(b0,myHero.pos)<R.range then if b0:To2D().onScreen then Utils:CastSpell(HK_R,b0,R.range,R.delay)else Utils:CastSpellMM(HK_R,b0,R.range,R.delay)end end end;if b1 and b2 then if b1>=b5 then if Utils:GetDistance(b2,myHero.pos)<R.range then if b2:To2D().onScreen then Utils:CastSpell(HK_R,b2,R.range,R.delay)else Utils:CastSpellMM(HK_R,b2,R.range,R.delay)end end end end end end end end;function Lux:Combo()local b9=Menu.Combo.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end;if bA and self.rTarget then self:CastRcombo(self.rTarget)end end;function Lux:Harass()local b9=Menu.Harass.useQ:Value()and Utils:IsReady(_Q)local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if b9 and self.qTarget then self:CastQcombo(self.qTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Lux:GetRdmg(X)local bf=0;if X then local by=myHero:GetSpellData(_R).level;local bz=myHero.ap*.75;if by>0 then local bh=({300,400,500})[by]bf=bf+bh+bz end end;return Utils:CalculateMagicalDamage(X,bf)end;function Lux:GetPassiveDmg(X)local bf=0;local cI=myHero.levelData.lvl;local cJ=myHero.ap*.2;local cK=10+10*cI+cJ;bf=cK;return Utils:CalculateMagicalDamage(X,bf)end;class"Twitch"function Twitch:__init()if p~="Twitch"then return end;self:LoadSpells()self:LoadMenu()Callback.Add("Tick",function()self:OnTick()end)end;function Twitch:LoadSpells()Q={}W={range=950,width=340,delay=.25,speed=1400,name=myHero:GetSpellData(_W).name:lower()}E={range=1200}R={range=850}end;function Twitch:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Combo:MenuElement({id="useR",name="Use R",value=true})Menu.Combo:MenuElement({id="useRcount",name="If X Enemies in R range",value=3,min=1,max=6,step=1})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})end;function Twitch:OnTick()self.wTarget=Utils:GetTarget(W.range)if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()end end end;function Twitch:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)and myHero.attackData.state~=STATE_WINDUP and not Utils:HasBuff(myHero,"twitchhideinshadows")then local a_,b0=HPred:GetReliableTarget(myHero.pos,W.range,W.delay,W.speed,W.width,Menu.AiO.Pred.HPred.reactionTime:Value(),false)local b1,b2=HPred:GetHitchance(myHero.pos,X,W.range,W.delay,W.speed,W.width,false,X.charName)local b3=Menu.AiO.Pred.pred:Value()==1;local b4=Utils:GetPred(X,W.speed,W.delay)local b5=Menu.AiO.Pred.HPred.accuracy:Value()if b3 then if b4 then if b4:To2D().onScreen and Utils:GetDistance(b4,myHero.pos)<W.range then Utils:CastSpell(HK_W,b4,W.range,W.delay)end end else if a_ and b0 and a_.networkID==X.networkID then if b0:To2D().onScreen and Utils:GetDistance(b0,myHero.pos)<W.range then Utils:CastSpell(HK_W,b0,W.range,W.delay)end end;if b1 and b2 then if b1>=b5 then if b2:To2D().onScreen and Utils:GetDistance(b2,myHero.pos)<W.range then Utils:CastSpell(HK_W,b2,W.range,W.delay)end end end end end end;function Twitch:CastEcombo()if#Utils:GetEnemyHeroesInRange(myHero.pos,E.range)>0 then for a4=1,#Utils:GetEnemyHeroesInRange(myHero.pos,E.range)do local aW=Utils:GetEnemyHeroesInRange(myHero.pos,E.range)[a4]if aW then if Utils:IsValid(aW,myHero.pos,E.range)then if Utils:HasBuff(aW,"twitchdeadlyvenom")then if self:GetEdmg(aW)>aW.health then Control.CastSpell(HK_E)break end end end end end end end;function Twitch:CastRcombo()if#Utils:GetEnemyHeroesInRange(myHero.pos,R.range)>=Menu.Combo.useRcount:Value()then Control.CastSpell(HK_R)end end;function Twitch:Combo()local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)local bA=Menu.Combo.useR:Value()and Utils:IsReady(_R)if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady then self:CastEcombo()end;if bA then self:CastRcombo()end end;function Twitch:Harass()local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady then self:CastEcombo()end end;function Twitch:GetEdmg(X)local bf=0;local bu=myHero:GetSpellData(_E).level;local bE=myHero.bonusDamage*.35;local cL=myHero.ap*.2;local bh=({20,30,40,50,60})[bu]local c3=({15,20,25,30,35})[bu]for a4=1,D()do local a7=F(a4)if a7 and string.find(a7.name:lower(),"twitch_base_p_stack")then if Utils:GetDistance(a7.pos,X.pos)<X.boundingRadius then if string.find(a7.name:lower(),"01")then bf=bf+bh+(c3+cL+bE)*1 elseif string.find(a7.name:lower(),"02")then bf=bf+bh+(c3+cL+bE)*2 elseif string.find(a7.name:lower(),"03")then bf=bf+bh+(c3+cL+bE)*3 elseif string.find(a7.name:lower(),"04")then bf=bf+bh+(c3+cL+bE)*4 elseif string.find(a7.name:lower(),"05")then bf=bf+bh+(c3+cL+bE)*5 elseif string.find(a7.name:lower(),"06")then bf=bf+bh+(c3+cL+bE)*6 end end end end;return Utils:CalculatePhysicalDamage(X,bf)end;class"Shaco"function Shaco:__init()if p~="Shaco"then return end;self:LoadSpells()self:LoadMenu()self.lastDodge=0;self.isLoaded=false;self.p2=false;Callback.Add("Tick",function()self:OnTick()end)end;function Shaco:LoadSpells()Q={range=400}W={range=425}E={range=625}R={}end;function Shaco:InitializeDodgeableSpells()self.dodgeableSpells={["Aatrox"]={},["Ahri"]={},["Akali"]={},["Amumu"]={},["Ashe"]={},["Blitzcrank"]={},["Brand"]={},["Braum"]={},["Caitlyn"]={},["Camille"]={},["Corki"]={},["DrMundo"]={},["Elise"]={},["Evelynn"]={},["Ezreal"]={},["Gnar"]={},["Gragas"]={},["Heimerdinger"]={},["Illaoi"]={},["Ivern"]={},["Jayce"]={},["Jhin"]={},["Jinx"]={},["Kalista"]={},["Karma"]={},["Kennen"]={},["Khazix"]={},["Kled"]={},["KogMaw"]={},["Leblanc"]={},["LeeSin"]={},["Morgana"]={},["Nautilus"]={},["Nidalee"]={},["Pyke"]={},["Quinn"]={},["Rakan"]={},["RekSai"]={},["Rengar"]={},["Rumble"]={},["Ryze"]={},["TahmKench"]={},["Taliyah"]={},["Thresh"]={},["Urgot"]={},["VelKoz"]={},["Xerath"]={},["Zac"]={},["Zoe"]={}}if#Utils:GetEnemyHeroes()>0 then for a4=1,#Utils:GetEnemyHeroes()do local bn=Utils:GetEnemyHeroes()[a4]if bn then if bn.charName=="Aatrox"then m(self.dodgeableSpells[bn.charName],"aatroxw")elseif bn.charName=="Ahri"then m(self.dodgeableSpells[bn.charName],"ahriseduce")elseif bn.charName=="Akali"then m(self.dodgeableSpells[bn.charName],"akalie")elseif bn.charName=="Amumu"then m(self.dodgeableSpells[bn.charName],"bandagetoss")elseif bn.charName=="Ashe"then m(self.dodgeableSpells[bn.charName],"volley")m(self.dodgeableSpells[bn.charName],"enchantedcrystalarrow")elseif bn.charName=="Blitzcrank"then m(self.dodgeableSpells[bn.charName],"rocketgrab")elseif bn.charName=="Brand"then m(self.dodgeableSpells[bn.charName],"brandq")elseif bn.charName=="Braum"then m(self.dodgeableSpells[bn.charName],"braumq")elseif bn.charName=="Caitlyn"then m(self.dodgeableSpells[bn.charName],"caitlynentrapmentmissile")elseif bn.charName=="Camille"then m(self.dodgeableSpells[bn.charName],"camillee")elseif bn.charName=="Corki"then m(self.dodgeableSpells[bn.charName],"missilebarragemissile")m(self.dodgeableSpells[bn.charName],"missilebarragemissile2")elseif bn.charName=="DrMundo"then m(self.dodgeableSpells[bn.charName],"infectedcleavermissile")elseif bn.charName=="Elise"then m(self.dodgeableSpells[bn.charName],"elisehumane")elseif bn.charName=="Evelynn"then m(self.dodgeableSpells[bn.charName],"evelynnq")elseif bn.charName=="Ezreal"then m(self.dodgeableSpells[bn.charName],"ezrealmysticshot")elseif bn.charName=="Gnar"then m(self.dodgeableSpells[bn.charName],"gnarq")elseif bn.charName=="Gragas"then m(self.dodgeableSpells[bn.charName],"gragase")elseif bn.charName=="Heimerdinger"then m(self.dodgeableSpells[bn.charName],"heimerdingerw")elseif bn.charName=="Illaoi"then m(self.dodgeableSpells[bn.charName],"illaoie")elseif bn.charName=="Ivern"then m(self.dodgeableSpells[bn.charName],"ivernq")elseif bn.charName=="Jayce"then m(self.dodgeableSpells[bn.charName],"jayceshockblast")elseif bn.charName=="Jhin"then m(self.dodgeableSpells[bn.charName],"jhinrshot")elseif bn.charName=="Jinx"then m(self.dodgeableSpells[bn.charName],"jinxw")elseif bn.charName=="Kalista"then m(self.dodgeableSpells[bn.charName],"kalistamysticshot")elseif bn.charName=="Karma"then m(self.dodgeableSpells[bn.charName],"karmaq")elseif bn.charName=="Kennen"then m(self.dodgeableSpells[bn.charName],"kennenshurikenhurlmissile1")elseif bn.charName=="Khazix"then m(self.dodgeableSpells[bn.charName],"khazixw")elseif bn.charName=="Kled"then m(self.dodgeableSpells[bn.charName],"kledq")elseif bn.charName=="KogMaw"then m(self.dodgeableSpells[bn.charName],"kogmawq")elseif bn.charName=="Leblanc"then m(self.dodgeableSpells[bn.charName],"leblance")m(self.dodgeableSpells[bn.charName],"leblancre")elseif bn.charName=="LeeSin"then m(self.dodgeableSpells[bn.charName],"blindmonkqone")elseif bn.charName=="Morgana"then m(self.dodgeableSpells[bn.charName],"darkbindingmissile")elseif bn.charName=="Nautilus"then m(self.dodgeableSpells[bn.charName],"nautilusanchordrag")elseif bn.charName=="Nidalee"then m(self.dodgeableSpells[bn.charName],"javelintoss")elseif bn.charName=="Pyke"then m(self.dodgeableSpells[bn.charName],"pykeqrange")elseif bn.charName=="Quinn"then m(self.dodgeableSpells[bn.charName],"quinnq")elseif bn.charName=="Rakan"then m(self.dodgeableSpells[bn.charName],"rakanq")elseif bn.charName=="RekSai"then m(self.dodgeableSpells[bn.charName],"reksaiqborrowed")elseif bn.charName=="Rengar"then m(self.dodgeableSpells[bn.charName],"rengare")elseif bn.charName=="Rumble"then m(self.dodgeableSpells[bn.charName],"rumblegrenade")elseif bn.charName=="Ryze"then m(self.dodgeableSpells[bn.charName],"ryzeq")elseif bn.charName=="TahmKench"then m(self.dodgeableSpells[bn.charName],"tahmkenchq")elseif bn.charName=="Taliyah"then m(self.dodgeableSpells[bn.charName],"taliyahq")elseif bn.charName=="Thresh"then m(self.dodgeableSpells[bn.charName],"threshq")elseif bn.charName=="Urgot"then m(self.dodgeableSpells[bn.charName],"urgote")elseif bn.charName=="VelKoz"then m(self.dodgeableSpells[bn.charName],"velkozq")elseif bn.charName=="Xerath"then m(self.dodgeableSpells[bn.charName],"xerathmagespear")elseif bn.charName=="Zac"then m(self.dodgeableSpells[bn.charName],"zacq")elseif bn.charName=="Zoe"then m(self.dodgeableSpells[bn.charName],"zoeq")m(self.dodgeableSpells[bn.charName],"zoee")end end end end end;function Shaco:LoadMenu()Menu:MenuElement({id="Combo",name="Combo Settings",type=MENU})Menu:MenuElement({id="Harass",name="Harass Settings",type=MENU})Menu:MenuElement({id="dodgeSettings",name="Dodge Settings",type=MENU})Menu:MenuElement({id="debug",name="debug",value=false})Menu.Combo:MenuElement({id="useW",name="Use W",value=true})Menu.Combo:MenuElement({id="useE",name="Use E",value=true})Menu.Harass:MenuElement({id="useW",name="Use W",value=true})Menu.Harass:MenuElement({id="useE",name="Use E",value=true})Menu.dodgeSettings:MenuElement({id="useQ",name="Use Q",value=true})Menu.dodgeSettings:MenuElement({id="useQhp",name="If HP% <= X",value=100,min=0,max=100,step=1})Menu.dodgeSettings:MenuElement({id="useW",name="Use W",value=true})Menu.dodgeSettings:MenuElement({id="useWhp",name="If HP% <= X",value=100,min=0,max=100,step=1})Menu.dodgeSettings:MenuElement({id="useR",name="Use R",value=true})Menu.dodgeSettings:MenuElement({id="useRhp",name="If HP% <= X",value=30,min=0,max=100,step=1})Menu.dodgeSettings:MenuElement({id="useRlast",name="Emergency Ult If HP% <= X",value=20,min=0,max=100,step=1})end;function Shaco:OnTick()if o()>=30 and not self.isLoaded then self:InitializeDodgeableSpells()self.isLoaded=true;print("Dodgeable spells initialized")end;self.wTarget=Utils:GetTarget(W.range)self.eTarget=Utils:GetTarget(E.range)local cM=Menu.dodgeSettings.useQ:Value()and Utils:IsReady(_Q)and Utils:GetHpPercent(myHero)<=Menu.dodgeSettings.useQhp:Value()local cN=Menu.dodgeSettings.useW:Value()and Utils:IsReady(_W)and Utils:GetHpPercent(myHero)<=Menu.dodgeSettings.useWhp:Value()local cO=Menu.dodgeSettings.useR:Value()and Utils:IsReady(_R)and Utils:GetHpPercent(myHero)<=Menu.dodgeSettings.useRhp:Value()local cP=Menu.dodgeSettings.useR:Value()and Utils:IsReady(_R)and Utils:GetHpPercent(myHero)<=Menu.dodgeSettings.useRlast:Value()if cP then self:CastRlast()end;if cM then self:CastQdodge2()end;if cN then if GetTickCount()-self.lastDodge>=500 then self:CastWdodge()end elseif cM then if GetTickCount()-self.lastDodge>=500 then self:CastQdodge()end elseif cO then if GetTickCount()-self.lastDodge>=500 then self:CastRdodge()end end;if not I then if Orb.combo then self:Combo()elseif Orb.harass then self:Harass()end end end;function Shaco:CastQdodge()local cQ=nil;local cR=nil;if#Utils:GetEnemyHeroes()>0 then for a4=1,#Utils:GetEnemyHeroes()do local bn=Utils:GetEnemyHeroes()[a4]if bn then if bn.activeSpell.valid then if self.dodgeableSpells[bn.charName]then cR=bn.activeSpell;if Menu.debug:Value()and not i(cR.name:lower(),"attack")then print(cR.name)end;for av,aw in pairs(self.dodgeableSpells[bn.charName])do if bn.activeSpell.name:lower()==aw then local cS=Vector(cR.placementPos.x,cR.placementPos.y,cR.placementPos.z)if cS:To2D().onScreen then cQ=cS end;local cb=myHero.pos+Vector(Vector(myHero.pos)-bn.pos):Perpendicular():Normalized()*Q.range;local a0=myHero.pos+Vector(Vector(myHero.pos)-bn.pos):Perpendicular2():Normalized()*Q.range;if cQ~=nil then if Utils:GetDistance(myHero.pos,cQ)<=250 then if not self.p2 then Utils:CastSpell(HK_Q,cb,Q.range)self.p2=true else Utils:CastSpell(HK_Q,a0,Q.range)self.p2=false end;self.lastDodge=GetTickCount()if Menu.debug:Value()then print("Q dodge ss: "..cR.name)end end elseif cR.target==myHero.handle then if not self.p2 then Utils:CastSpell(HK_Q,cb,Q.range)self.p2=true else Utils:CastSpell(HK_Q,a0,Q.range)self.p2=false end;self.lastDodge=GetTickCount()if Menu.debug:Value()then print("Q dodge t: "..cR.name)end end end end end end end end end end;function Shaco:CastQdodge2()local cQ=nil;local cR=nil;if#Utils:GetEnemyHeroes()>0 then for a4=1,#Utils:GetEnemyHeroes()do local bn=Utils:GetEnemyHeroes()[a4]if bn then if bn.activeSpell.valid then cR=bn.activeSpell;if Menu.debug:Value()then print(cR.name)end;local cS=Vector(cR.placementPos.x,cR.placementPos.y,cR.placementPos.z)if cS:To2D().onScreen then cQ=cS end;local cb=myHero.pos+Vector(Vector(myHero.pos)-bn.pos):Perpendicular():Normalized()*Q.range;local a0=myHero.pos+Vector(Vector(myHero.pos)-bn.pos):Perpendicular2():Normalized()*Q.range;if cQ~=nil then if Utils:GetDistance(myHero.pos,cQ)<=250 then if not self.p2 then Utils:CastSpell(HK_Q,cb,Q.range)self.p2=true else Utils:CastSpell(HK_Q,a0,Q.range)self.p2=false end;self.lastDodge=GetTickCount()if Menu.debug:Value()then print("Q dodge ss: "..cR.name)end end elseif cR.target==myHero.handle then if not self.p2 then Utils:CastSpell(HK_Q,cb,Q.range)self.p2=true else Utils:CastSpell(HK_Q,a0,Q.range)self.p2=false end;self.lastDodge=GetTickCount()if Menu.debug:Value()then print("Q dodge t: "..cR.name)end end end end end end end;function Shaco:CastWdodge()local cQ=nil;local cR=nil;if#Utils:GetEnemyHeroes()>0 then for a4=1,#Utils:GetEnemyHeroes()do local bn=Utils:GetEnemyHeroes()[a4]if bn then if bn.activeSpell.valid then if self.dodgeableSpells[bn.charName]then cR=bn.activeSpell;if Menu.debug:Value()and not i(cR.name:lower(),"attack")then print(cR.name)end;for av,aw in pairs(self.dodgeableSpells[bn.charName])do if bn.activeSpell.name:lower()==aw then local cS=Vector(cR.placementPos.x,cR.placementPos.y,cR.placementPos.z)if cS:To2D().onScreen then cQ=cS end;if cQ~=nil then if Utils:GetDistance(myHero.pos,cQ)<=250 then Utils:CastSpell(HK_W,myHero.pos:Extended(bn.pos,100),100)self.lastDodge=GetTickCount()if Menu.debug:Value()then print("W dodge ss: "..cR.name)end end elseif cR.target==myHero.handle then Utils:CastSpell(HK_W,myHero.pos:Extended(bn.pos,100),100)self.lastDodge=GetTickCount()if Menu.debug:Value()then print("W dodge t: "..cR.name)end end end end end end end end end end;function Shaco:CastRdodge()local cQ=nil;local cR=nil;if#Utils:GetEnemyHeroes()>0 then for a4=1,#Utils:GetEnemyHeroes()do local bn=Utils:GetEnemyHeroes()[a4]if bn then if bn.activeSpell.valid then if self.dodgeableSpells[bn.charName]then cR=bn.activeSpell;if Menu.debug:Value()and not i(cR.name:lower(),"attack")then print(cR.name)end;for av,aw in pairs(self.dodgeableSpells[bn.charName])do if bn.activeSpell.name:lower()==aw then local cS=Vector(cR.placementPos.x,cR.placementPos.y,cR.placementPos.z)if cS:To2D().onScreen then cQ=cS end;if cQ~=nil then if Utils:GetDistance(myHero.pos,cQ)<=250 then Control.CastSpell(HK_R)self.lastDodge=GetTickCount()if Menu.debug:Value()then print("R dodge ss: "..cR.name)end end elseif cR.target==myHero.handle then Control.CastSpell(HK_R)self.lastDodge=GetTickCount()if Menu.debug:Value()then print("R dodge t: "..cR.name)end end end end end end end end end end;function Shaco:CastRlast()local cQ=nil;local cR=nil;if#Utils:GetEnemyHeroes()>0 then for a4=1,#Utils:GetEnemyHeroes()do local bn=Utils:GetEnemyHeroes()[a4]if bn then if bn.activeSpell.valid then cR=bn.activeSpell;if Menu.debug:Value()then print(cR.name)end;local cS=Vector(cR.placementPos.x,cR.placementPos.y,cR.placementPos.z)if cS:To2D().onScreen then cQ=cS end;if cQ~=nil then if Utils:GetDistance(myHero.pos,cQ)<=250 then Control.CastSpell(HK_R)self.lastDodge=GetTickCount()if Menu.debug:Value()then print("R dodge ss: "..cR.name)end elseif cR.target==myHero.handle then Control.CastSpell(HK_R)self.lastDodge=GetTickCount()if Menu.debug:Value()then print("R dodge t: "..cR.name)end end end end elseif#Utils:GetEnemyHeroesInRange(myHero.pos,250)>0 then Control.CastSpell(HK_R)end end end end;function Shaco:CastWcombo(X)if Utils:IsValid(X,myHero.pos,W.range)then local Y=myHero.pos:Extended(X.pos,W.range)Utils:CastSpell(HK_W,Y,W.range)end end;function Shaco:CastEcombo(X)if Utils:IsValid(X,myHero.pos,E.range)then Control.CastSpell(HK_E,X)end end;function Shaco:Combo()local ba=Menu.Combo.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Combo.useE:Value()and Utils:IsReady(_E)if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;function Shaco:Harass()local ba=Menu.Harass.useW:Value()and Utils:IsReady(_W)local eReady=Menu.Harass.useE:Value()and Utils:IsReady(_E)if ba and self.wTarget then self:CastWcombo(self.wTarget)end;if eReady and self.eTarget then self:CastEcombo(self.eTarget)end end;class"HPred"local cT=.2;local cU=o()local cV={["LifeAura.troy"]=4,["ZileanBase_R_Buf.troy"]=3,["Aatrox_Base_Passive_Death_Activate"]=3}local cW={["EzrealArcaneShift"]=475,["RiftWalk"]=500,["EkkoEAttack"]=0,["AlphaStrike"]=0}local cX={"global_ss_flash_02.troy","Lissandra_Base_E_Arrival.troy","Leblanc_Base_W_return_activation.troy"}local cY={}local cZ={}local c_={}local d0={}local d1={}local d2;local d3;local d4;function HPred:Tick()if o()-cU<cT then return end;cU=o()for aV,d5 in pairs(cY)do if o()>d5.expireTime+.5 then cY[aV]=nil end end;for a4=1,D()do local a7=F(a4)if a7 and not cY[a7.networkID]and cV[a7.name]then cY[a7.networkID]={}cY[a7.networkID]["expireTime"]=o()+cV[a7.name]local target=self:GetHeroByPosition(a7.pos)if target and target.isEnemy then cY[a7.networkID]["target"]=target;cY[a7.networkID]["pos"]=target.pos;cY[a7.networkID]["isEnemy"]=target.isEnemy end end end;for a4=1,r()do local a_=s(a4)if a_ then self:UpdateMovementHistory(a_)end end;for aV,d6 in pairs(cZ)do if d6 and o()>d6.expireTime+.5 then cZ[aV]=nil end end;self:CacheTeleports()end;function HPred:GetEnemyNexusPosition()if myHero.team==100 then return Vector(14340,171.977722167969,14390)else return Vector(396,182.132507324219,462)end end;function HPred:GetGuarenteedTarget(d7,Z,delay,az,bX,d8,d9)target,aimPosition=self:GetHourglassTarget(d7,Z,delay,az,d8,d9,bX)if target and aimPosition then return target,aimPosition end;target,aimPosition=self:GetRevivingTarget(d7,Z,delay,az,d8,d9,bX)if target and aimPosition then return target,aimPosition end;target,aimPosition=self:GetTeleportingTarget(d7,Z,delay,az,d8,d9,bX)if target and aimPosition then return target,aimPosition end;local target,aimPosition=self:GetImmobileTarget(d7,Z,delay,az,d8,d9,bX)if target and aimPosition then return target,aimPosition end end;function HPred:GetReliableTarget(d7,Z,delay,az,bX,d8,d9)target,aimPosition=self:GetHourglassTarget(d7,Z,delay,az,d8,d9,bX)if target and aimPosition then return target,aimPosition end;target,aimPosition=self:GetRevivingTarget(d7,Z,delay,az,d8,d9,bX)if target and aimPosition then return target,aimPosition end;target,aimPosition=self:GetChannelingTarget(d7,Z,delay,az,d8,d9,bX)if target and aimPosition then return target,aimPosition end;target,aimPosition=self:GetTeleportingTarget(d7,Z,delay,az,d8,d9,bX)if target and aimPosition then return target,aimPosition end;target,aimPosition=self:GetInstantDashTarget(d7,Z,delay,az,d8,d9,bX)if target and aimPosition then return target,aimPosition end;target,aimPosition=self:GetDashingTarget(d7,Z,delay,az,d8,d9,bX,midDash)if target and aimPosition then return target,aimPosition end;local target,aimPosition=self:GetImmobileTarget(d7,Z,delay,az,d8,d9,bX)if target and aimPosition then return target,aimPosition end end;function HPred:GetLineTargetCount(d7,b0,delay,az,be,da)local db=0;for a4=1,r()do local a_=s(a4)if a_ and self:CanTargetALL(a_)and(da or a_.isEnemy)then local dc=self:PredictUnitPosition(a_,delay+self:GetDistance(d7,a_.pos)/az)local dd,pointLine,isOnSegment=self:VectorPointProjectionOnLineSegment(d7,b0,dc)if dd and isOnSegment and self:GetDistanceSqr(dc,dd)<=(a_.boundingRadius+be)*(a_.boundingRadius+be)then db=db+1 end end end;return db end;function HPred:GetUnreliableTarget(d7,Z,delay,az,bX,d9,de,df)local dg={}for a4=1,r()do local a_=s(a4)if a_ and self:CanTarget(a_)and(not df or df[a_.charName])then local b1,aimPosition=self:GetHitchance(d7,a_,Z,delay,az,bX,d9)if b1>=de then dg[a_.charName]={["hitChance"]=b1,["aimPosition"]=aimPosition}end end end;local dh=0;local di;for dj,dk in pairs(dg)do if dk.hitChance>dh then dh=dk.hitChance;di=dk.aimPosition end end;if dh>=de then return dh,di end end;function HPred:GetHitchance(d7,target,Z,delay,az,bX,d9)local b1=1;local aimPosition=self:PredictUnitPosition(target,delay+self:GetDistance(d7,target.pos)/az)local dl=self:GetSpellInterceptTime(d7,aimPosition,delay,az)local dm=self:PredictReactionTime(target,.1)if c_ and c_[target.charName]and o()-c_[target.charName]["ChangedAt"]<.25 then b1=2 end;if not target.pathing or not target.pathing.hasMovePath then b1=2 end;local dn,dp=self:UnitMovementBounds(target,dl,dm)if dp-target.boundingRadius<=bX/2 then dn,dp=self:UnitMovementBounds(target,dl,0)if dp-target.boundingRadius<=bX/2 then b1=4 else b1=3 end end;if target.activeSpell and target.activeSpell.valid then if target.activeSpell.startTime+target.activeSpell.windup-o()>=delay then b1=5 else b1=3 end end;if not self:IsInRange(myHero.pos,aimPosition,Z)then b1=-1 end;if b1>0 and d9 then if self:IsWindwallBlocking(d7,aimPosition)then b1=-1 elseif self:CheckMinionCollision(d7,aimPosition,delay,az,bX)then b1=-1 end end;return b1,aimPosition end;function HPred:PredictReactionTime(X,dq)local dm=dq;if not X or not dm then return end;if X.activeSpell and X.activeSpell.valid then local dr=X.activeSpell.startTime+X.activeSpell.windup-o()if dr>0 then dm=dr end end;return dm end;function HPred:GetDashingTarget(d7,Z,delay,az,ds,d9,bX,midDash)local target;local aimPosition;for a4=1,r()do local a_=s(a4)if a_ and a_.isEnemy and a_.pathing.hasMovePath and a_.pathing.isDashing and a_.pathing.dashSpeed>500 then local dt=a_:GetPath(1)if self:IsInRange(d7,dt,Z)then local du=self:GetDistance(a_.pos,dt)/a_.pathing.dashSpeed;local dv=self:GetSpellInterceptTime(myHero.pos,dt,delay,az)local dw=dv-du;if dw>0 and dw<ds and(not d9 or not self:CheckMinionCollision(d7,dt,delay,az,bX))then target=a_;aimPosition=dt;return target,aimPosition end end end end end;function HPred:GetHourglassTarget(d7,Z,delay,az,d8,d9,bX)local target;local aimPosition;for a4=1,r()do local a_=s(a4)if a_ and a_.isEnemy then local dx,dy=self:HasBuff(a_,"zhonyasringshield")if dx then local dz=self:GetSpellInterceptTime(myHero.pos,a_.pos,delay,az)local dw=dz-dy;if dz>dy and dw<d8 and(not d9 or not self:CheckMinionCollision(d7,interceptPosition,delay,az,bX))then target=a_;aimPosition=a_.pos;return target,aimPosition end end end end end;function HPred:GetRevivingTarget(d7,Z,delay,az,d8,d9,bX)local target;local aimPosition;for aV,d5 in pairs(cY)do if d5 and d5.isEnemy then local dl=self:GetSpellInterceptTime(d7,d5.pos,delay,az)if dl>d5.expireTime-o()and dl-d5.expireTime-o()<d8 then target=d5.target;aimPosition=d5.pos;return target,aimPosition end end end end;function HPred:GetInstantDashTarget(d7,Z,delay,az,d8,d9,bX)local target;local aimPosition;for a4=1,r()do local a_=s(a4)if a_ and a_.isEnemy and a_.activeSpell and a_.activeSpell.valid and cW[a_.activeSpell.name]then local dr=a_.activeSpell.startTime+a_.activeSpell.windup-o()if dr>0 then local dA;local dB=cW[a_.activeSpell.name]if type(dB)=="table"then elseif dB>0 then dA=Vector(a_.activeSpell.placementPos.x,a_.activeSpell.placementPos.y,a_.activeSpell.placementPos.z)dA=a_.activeSpell.startPos+(dA-a_.activeSpell.startPos):Normalized()*f(self:GetDistance(a_.activeSpell.startPos,dA),Z)else local dC=self:GetObjectByHandle(a_.activeSpell.target)if dC then local dD;if dB==0 then if a_.activeSpell.name=="AlphaStrike"then dr=dr+.75 end;dD=(dC.pos-a_.pos):Normalized()elseif dB==-1 then dD=(a_.pos-dC.pos):Normalized()elseif dB==-255 then if bX>250 then dA=dC.pos end end;if dD then dA=dC.pos-dD*dC.boundingRadius end end end;local dl=self:GetSpellInterceptTime(myHero.pos,dA,delay,az)local dw=dl-dr;if self:IsInRange(d7,dA,Z)and dw<d8 and(not d9 or not self:CheckMinionCollision(d7,dA,delay,az,bX))then target=a_;aimPosition=dA;return target,aimPosition end end end end end;function HPred:GetBlinkTarget(d7,Z,az,delay,d9,bX)local target;local aimPosition;for a4=1,D()do local a7=F(a4)if a7 and cX[a7.name]and self:IsInRange(d7,a7.pos,Z)then local dE=a7.pos;for av,aw in pairs(self:GetEnemyHeroes())do local a_=aw;if a_ and a_.isEnemy and self:IsInRange(a_.pos,dE,a_.boundingRadius)then if not d9 or not self:CheckMinionCollision(d7,dE,delay,az,bX)then target=a_;aimPosition=dE;return target,aimPosition end end end end end end;function HPred:GetChannelingTarget(d7,Z,delay,az,d8,d9,bX)local target;local aimPosition;for a4=1,r()do local a_=s(a4)if a_ then local dl=self:GetSpellInterceptTime(myHero.pos,a_.pos,delay,az)if self:CanTarget(a_)and self:IsInRange(d7,a_.pos,Z)and self:IsChannelling(a_,dl)and(not d9 or not self:CheckMinionCollision(d7,a_.pos,delay,az,bX))then target=a_;aimPosition=a_.pos;return target,aimPosition end end end end;function HPred:GetImmobileTarget(d7,Z,delay,az,d8,d9,bX)local target;local aimPosition;for a4=1,r()do local a_=s(a4)if a_ and self:CanTarget(a_)and self:IsInRange(d7,a_.pos,Z)then local dF=self:GetImmobileTime(a_)local dl=self:GetSpellInterceptTime(d7,a_.pos,delay,az)if dF-dl>d8 and(not d9 or not self:CheckMinionCollision(d7,a_.pos,delay,az,bX))then target=a_;aimPosition=a_.pos;return target,aimPosition end end end end;function HPred:CacheTeleports()for a4=1,t()do local bT=u(a4)if bT and bT.isEnemy and not cZ[bT.networkID]then local dG,dH=self:HasBuff(bT,"teleport_target")if dG then self:RecordTeleport(bT,self:GetTeleportOffset(bT.pos,143.25),dH)end end end end;function HPred:RecordTeleport(target,b0,dI)cZ[target.networkID]={}cZ[target.networkID]["target"]=target;cZ[target.networkID]["aimPos"]=b0;cZ[target.networkID]["expireTime"]=dI+o()end;function HPred:CalculateIncomingDamage()d1={}local c7=o()for aV,dJ in pairs(d0)do if dJ then local dK=self:GetDistance(dJ.data.pos,dJ.target.pos)if dJ.name==""or c7>=dJ.timeout or dK<dJ.target.boundingRadius then d0[aV]=nil else if not d1[dJ.target.networkID]then d1[dJ.target.networkID]=dJ.damage else d1[dJ.target.networkID]=d1[dJ.target.networkID]+dJ.damage end end end end end;function HPred:GetIncomingDamage(target)local ap=0;if target and d1[target.networkID]then ap=d1[target.networkID]end;return ap end;local dL=3000;function HPred:CacheParticles()if d2 and d2.name==""then d2=nil end;for a4=1,D()do local a7=F(a4)if a7 and self:IsInRange(a7.pos,myHero.pos,dL)then if i(a7.name,"W_windwall%d")and not d2 then local dM=self:GetObjectByHandle(a7.handle)if dM and dM.isEnemy then d2=a7;d3=Vector(a7.pos.x,a7.pos.y,a7.pos.z)local dN=k(a7.name)-5;local dO=j(a7.name,dN,dN)-1;d4=150+dO*25 end end end end end;function HPred:CacheMissiles()local c7=o()for a4=1,B()do local dJ=C(a4)if dJ and not d0[dJ.networkID]and dJ.missileData then if dJ.missileData.target and dJ.missileData.owner then local dP=dJ.missileData.name;local dM=self:GetObjectByHandle(dJ.missileData.owner)local target=self:GetObjectByHandle(dJ.missileData.target)if dM and target and i(target.type,"Hero")then if i(dP,"BasicAttack")or i(dP,"CritAttack")then d0[dJ.networkID]={}d0[dJ.networkID].target=target;d0[dJ.networkID].data=dJ;d0[dJ.networkID].danger=1;d0[dJ.networkID].timeout=c7+1.5;local ap=dM.totalDamage;if i(dP,"CritAttack")then ap=ap*1.5 end;d0[dJ.networkID].damage=self:CalculatePhysicalDamage(target,ap)end end end end end end;function HPred:CalculatePhysicalDamage(target,ap)local dQ=0;if target and ap then local aq=target.armor*myHero.armorPenPercent-myHero.armorPen;local ar=100/(100+aq)if aq<0 then ar=2-100/(100-aq)end;dQ=ap*ar end;return dQ end;function HPred:CalculateMagicalDamage(target,ap)local dQ=0;if target and ap then local as=target.magicResist*myHero.magicPenPercent-myHero.magicPen;local ar=100/(100+as)if as<0 then ar=2-100/(100-as)end;dQ=ap*ar end;return dQ end;function HPred:GetTeleportingTarget(d7,Z,delay,az,d8,d9,bX)local target;local aimPosition;for aV,d6 in pairs(cZ)do if d6 and d6.expireTime>o()and self:IsInRange(d7,d6.aimPos,Z)then local dz=self:GetSpellInterceptTime(d7,d6.aimPos,delay,az)local dR=d6.expireTime-o()if dz>dR and dz-dR<=d8 and(not d9 or not self:CheckMinionCollision(d7,d6.aimPos,delay,az,bX))then target=d6.target;aimPosition=d6.aimPos;return target,aimPosition end end end end;function HPred:GetTargetMS(target)if target then local dS=target.pathing.isDashing and target.pathing.dashSpeed or target.ms;return dS end;return l end;function HPred:Angle(dT,dU)if dT and dU then local dV=dT-dU;local dW=c(dV.x,dV.z)*180/d;if dW<0 then dW=dW+360 end;return dW end end;function HPred:UpdateMovementHistory(X)if not X then return end;if not c_[X.charName]then c_[X.charName]={}c_[X.charName]["EndPos"]=X.pathing.endPos;c_[X.charName]["StartPos"]=X.pathing.endPos;c_[X.charName]["PreviousAngle"]=0;c_[X.charName]["ChangedAt"]=o()end;if c_[X.charName]["EndPos"].x~=X.pathing.endPos.x or c_[X.charName]["EndPos"].y~=X.pathing.endPos.y or c_[X.charName]["EndPos"].z~=X.pathing.endPos.z then c_[X.charName]["PreviousAngle"]=self:Angle(Vector(c_[X.charName]["StartPos"].x,c_[X.charName]["StartPos"].y,c_[X.charName]["StartPos"].z),Vector(c_[X.charName]["EndPos"].x,c_[X.charName]["EndPos"].y,c_[X.charName]["EndPos"].z))c_[X.charName]["EndPos"]=X.pathing.endPos;c_[X.charName]["StartPos"]=X.pos;c_[X.charName]["ChangedAt"]=o()end end;function HPred:PredictUnitPosition(X,delay)if not X or not delay then return end;local dX=X.pos;local dy=delay;local dY=self:GetPathNodes(X)for a4=1,#dY-1 do local dZ=self:GetDistance(dY[a4],dY[a4+1])local d_=dZ/self:GetTargetMS(X)if dy>d_ then dy=dy-d_;dX=dY[a4+1]else local e0=(dY[a4+1]-dY[a4]):Normalized()dX=dY[a4]+e0*self:GetTargetMS(X)*dy;break end end;return dX end;function HPred:IsChannelling(target,dl)if not target then return false end;if target.activeSpell and target.activeSpell.valid and target.activeSpell.isChanneling then return true end end;function HPred:HasBuff(target,a3,e1)local e2=e1;if not e1 then e2=0 end;if not target then return false end;local e3;for a4=1,target.buffCount do local a5=target:GetBuff(a4)if a5 and a5.duration>e2 and a5.name==a3 then e3=a5.duration;return true,e3 end end end;function HPred:GetTeleportOffset(dn,e4)local e5=dn+(self:GetEnemyNexusPosition()-dn):Normalized()*e4;return e5 end;function HPred:GetSpellInterceptTime(bR,dA,delay,az)local dl=n()/2000+delay+self:GetDistance(bR,dA)/az;return dl end;function HPred:CanTarget(target)return target and target.isEnemy and target.alive and target.visible and target.isTargetable end;function HPred:CanTargetALL(target)return target and target.alive and target.visible and target.isTargetable end;function HPred:UnitMovementBounds(X,delay,dm)if not X then return end;local e6=self:PredictUnitPosition(X,delay)local bX=0;local e7=delay-dm-self:GetImmobileTime(X)if e7>0 then bX=self:GetTargetMS(X)*e7 end;return e6,bX end;function HPred:GetImmobileTime(X)if not X then return 0 end;local e2=0;for a4=0,X.buffCount do local a5=X:GetBuff(a4)if a5 and a5.count>0 and a5.duration>e2 and(a5.type==5 or a5.type==8 or a5.type==21 or a5.type==22 or a5.type==24 or a5.type==11 or a5.type==29 or a5.type==30 or a5.type==39)then e2=a5.duration end end;return e2 end;function HPred:GetSlowedTime(X)if not X then return 0 end;local e2=0;for a4=0,X.buffCount do local a5=X:GetBuff(a4)if a5 and a5.count>0 and a5.duration>e2 and a5.type==10 then e2=a5.duration;return e2 end end;return e2 end;function HPred:GetPathNodes(X)local e8={}m(e8,X.pos)if X and X.pathing and X.pathing.hasMovePath then for a4=X.pathing.pathIndex,X.pathing.pathCount do path=X:GetPath(a4)m(e8,path)end end;return e8 end;function HPred:GetObjectByHandle(e9)if not e9 then return nil end;local target;for a4=1,r()do local bn=s(a4)if bn and bn.handle==e9 then target=bn;return target end end;for a4=1,t()do local bT=u(a4)if bT and bT.handle==e9 then target=bT;return target end end;for a4=1,Game.ParticleCount()do local a7=Game.Particle(a4)if a7 and a7.handle==e9 then target=a7;return target end end end;function HPred:GetHeroByPosition(ea)if not ea then return nil end;local target;for a4=1,r()do local bn=s(a4)if bn and bn.pos.x==ea.x and bn.pos.y==ea.y and bn.pos.z==ea.z then target=bn;return target end end end;function HPred:GetObjectByPosition(ea)if not ea then return nil end;local target;for a4=1,r()do local bn=s(a4)if bn and bn.pos.x==ea.x and bn.pos.y==ea.y and bn.pos.z==ea.z then target=bn;return target end end;for a4=1,t()do local bn=u(a4)if bn and bn.pos.x==ea.x and bn.pos.y==ea.y and bn.pos.z==ea.z then target=bn;return target end end;for a4=1,D()do local bn=F()if bn and bn.pos.x==ea.x and bn.pos.y==ea.y and bn.pos.z==ea.z then target=bn;return target end end end;function HPred:GetEnemyHeroByHandle(e9)if not e9 then return nil end;local target;for a4=1,r()do local bn=s(a4)if bn and bn.handle==e9 then target=bn;return target end end end;function HPred:GetNearestParticleByNames(dn,eb)local target;local bG=999999;for a4=1,D()do local a7=F(a4)if a7 then local ec=self:GetDistance(dn,a7.pos)if ec<bG then bG=ec;target=a7 end end end;return target,bG end;function HPred:GetPathLength(e8)if not e8 then return 0 end;local O=0;for a4=1,#e8-1 do O=O+self:GetDistance(e8[a4],e8[a4+1])end;return O end;function HPred:CheckMinionCollision(dn,dA,delay,az,bX,ed)if dn and endpos and bX then if not ed then ed=bX end;local e0=(dA-dn):Normalized()local ee=self:GetDistance(dn,dA)/ed;for a4=1,ee do local ef=dn+e0*a4*ed;local eg=delay+self:GetDistance(dn,ef)/az;if self:IsMinionIntersection(ef,bX,eg,bX*3)then return true end end end;return false end;function HPred:IsMinionIntersection(eh,bX,delay,ei)if eh and bX and delay then if not ei then ei=500 end;for a4=1,Game.MinionCount()do local bT=Game.Minion(a4)if bT and self:CanTarget(bT)and self:IsInRange(bT.pos,eh,ei)then local dX=self:PredictUnitPosition(bT,delay)if self:IsInRange(eh,dX,bX+bT.boundingRadius)then return true end end end end;return false end;function HPred:VectorPointProjectionOnLineSegment(ej,ek,aw)if ej and ek and aw then assert(ej and ek and aw,"VectorPointProjectionOnLineSegment: wrong argument types (3 <Vector> expected)")local el,em,en,eo,ep,eq=aw.x,aw.z or aw.y,ej.x,ej.z or ej.y,ek.x,ek.z or ek.y;local er=((el-en)*(ep-en)+(em-eo)*(eq-eo))/((ep-en)*(ep-en)+(eq-eo)*(eq-eo))local pointLine={x=en+er*(ep-en),y=eo+er*(eq-eo)}local es=er<0 and 0 or(er>1 and 1 or er)local isOnSegment=es==er;local pointSegment=isOnSegment and pointLine or{x=en+es*(ep-en),y=eo+es*(eq-eo)}end;return pointSegment,pointLine,isOnSegment end;function HPred:IsWindwallBlocking(d7,target)if d2 and d7 and target then local et=(d3-d2.pos):Normalized()return self:DoLineSegmentsIntersect(d7,target,d2.pos+et:Perpendicular()*d4,d2.pos+et:Perpendicular2()*d4)end;return false end;function HPred:DoLineSegmentsIntersect(dT,dU,eu,ev)local ew=self:GetOrientation(dT,dU,eu)local ex=self:GetOrientation(dT,dU,ev)local ey=self:GetOrientation(eu,ev,dT)local ez=self:GetOrientation(eu,ev,dU)if ew~=ex and ey~=ez then return true end;if ew==0 and self:IsOnSegment(dT,eu,dU)then return true end;if ex==0 and self:IsOnSegment(dT,ev,dU)then return true end;if ey==0 and self:IsOnSegment(eu,dT,ev)then return true end;if ez==0 and self:IsOnSegment(eu,dU,ev)then return true end;return false end;function HPred:GetOrientation(dT,dU,eu)if dT and dU and eu then local eA=(dU.z-dT.z)*(eu.x-dU.x)-(dU.x-dT.x)*(eu.z-dU.z)if eA==0 then return 0 elseif eA>0 then return 1 else return 2 end end;return 0 end;function HPred:IsOnSegment(dT,dU,eu)return dU.x<=e(dT.x,eu.x)and dU.x>=f(dT.x,eu.x)and dU.z<=e(dT.z,eu.z)and dU.z>=f(dT.z,eu.z)end;function HPred:GetSlope(dT,dU)return(dU.z-dT.z)/(dU.x-dT.x)end;function HPred:GetEnemyByName(b_)local target;if b_ then for a4=1,r()do local bn=s(a4)if bn and bn.isEnemy and bn.charName==b_ then target=bn;return target end end end;return nil end;function HPred:IsPointInArc(d7,dn,target,dW,Z)if dn and target and d7 and dW and Z then local eB=g(HPred:Angle(dn,target)-HPred:Angle(d7,dn))if eB<dW and self:IsInRange(dn,target,Z)then return true end end;return false end;function HPred:GetEnemyHeroes()return Utils:GetEnemyHeroes()end;function HPred:GetDistanceSqr(_,a0)return Utils:GetDistanceSqr(_,a0)end;function HPred:IsInRange(_,a0,Z)return self:GetDistance(_,a0)<=Z end;function HPred:GetDistance(_,a0)return h(self:GetDistanceSqr(_,a0))end"),nil,"bt",_ENV))()